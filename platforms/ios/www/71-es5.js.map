{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-textarea-md.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,8CAAA,GAAA,mBAAA;AAAA;AAAA,0DAAA,CAAA;AAAA;;;AAAA,QAAA,gDAAA,GAAA,mBAAA;AAAA;AAAA,4DAAA,CAAA;AAAA;;;AAAA,QAAA,iDAAA,GAAA,mBAAA;AAAA;AAAA,6DAAA,CAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;;AAKA,QAAA,QAAA;AAAA;AAAA;AACA,wBAAA,OAAA,EAAA;AAAA;;AAAA;;AACQ,QAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR,aAAA,OAAA,uBAAoC,WAAA,EAApC;AACA,aAAA,gBAAA,GAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,cAAA,GAAA,MAAA;AACA;;;;AAGA,aAAA,SAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,WAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,CAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,IAAA,GAAA,KAAA,OAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,UAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,KAAA,GAAA,EAAA;;AACA,aAAA,OAAA,GAAA,UAAA,EAAA,EAAA;AACA,cAAA,KAAA,CAAA,WAAA,EAAA;AACA,YAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA,KAAA;AACA;;AACA,UAAA,KAAA,CAAA,SAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,SANA;;AAOA,aAAA,OAAA,GAAA,YAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,IAAA;;AACA,UAAA,KAAA,CAAA,WAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AACA,SAJA;;AAKA,aAAA,MAAA,GAAA,YAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,KAAA;;AACA,UAAA,KAAA,CAAA,WAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,SAJA;;AAKA,aAAA,SAAA,GAAA,YAAA;AACA,UAAA,KAAA,CAAA,gBAAA;AACA,SAFA;;AAGA,aAAA,SAAA,GAAyB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,WAAX,EAAW,CAAX,CAAzB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA,aAAA,OAAA,GAAuB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,SAAX,EAAW,CAAX,CAAvB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA;;AA3EA;AAAA;AAAA,0CA4EA;AACA,eAAA,SAAA,GAAyB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,SAAb,EAAa,KAAA,QAAb,CAAzB;AACA;AA9EA;AAAA;AAAA,0CA+EA;AACA,eAAA,SAAA;AACA;AACA;;;;AAlFA;AAAA;AAAA,uCAqFA;AACA,cAAA,WAAA,GAAA,KAAA,WAAA;AACA,cAAA,KAAA,GAAA,KAAA,QAAA,EAAA;;AACA,cAAA,WAAA,IAAA,WAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,YAAA,WAAA,CAAA,KAAA,GAAA,KAAA;AACA;;AACA,eAAA,WAAA;AACA,eAAA,SAAA;AACA,eAAA,SAAA,CAAA,IAAA,CAAA;AAA6B,YAAA,KAAA,EAAA;AAA7B,WAAA;AACA;AA9FA;AAAA;AAAA,4CA+FA;AACA,eAAA,SAAA;AACA,eAAA,eAAA;AACA;AACA,iBAAA,EAAA,CAAA,aAAA,CAAA,IAAA,WAAA,CAAA,iBAAA,EAAA;AACA,cAAA,MAAA,EAAA,KAAA;AADA,aAAA,CAAA;AAGA;AACA;AAvGA;AAAA;AAAA,+CAwGA;AACA;AACA,YAAA,QAAA,CAAA,aAAA,CAAA,IAAA,WAAA,CAAA,mBAAA,EAAA;AACA,cAAA,MAAA,EAAA,KAAA;AADA,aAAA,CAAA;AAGA;AACA;AA9GA;AAAA;AAAA,2CA+GA;AACA,eAAA,WAAA;AACA,SAjHA,CAkHA;;AAlHA;AAAA;AAAA,sCAmHA;AACA,cAAA,WAAA,GAAA,KAAA,WAAA;;AACA,cAAA,WAAA,IAAA,KAAA,QAAA,EAAA;AACY,YAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAQ,YAAA;AACpB,cAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA;AACA,cAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,WAAA,CAAA,YAAA,GAAA,IAAA;AACa,aAHD;AAIZ;AACA;AACA;;;;;AA5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiIA,wBAAA,KAAA,WAAA,EAAA;AACA,2BAAA,WAAA,CAAA,KAAA;AACA;;AAnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqIA;;;;AArIA;AAAA;AAAA,0CAwIA;AACA,iBAAA,OAAA,CAAA,OAAA,CAAA,KAAA,WAAA,CAAA;AACA;AA1IA;AAAA;AAAA,oCA2IA;AACA,eAAA,QAAA,CAAA,IAAA,CAAA;AACA,2BAAA,IADA;AAEA,wBAAA,IAFA;AAGA,qBAAA,IAHA;AAIA,oCAAA,KAAA,QAJA;AAKA,+BAAA,KAAA,WAAA,IAAA,IALA;AAMA,yBAAA,KAAA,QAAA,EANA;AAOA,yBAAA,KAAA;AAPA,WAAA;AASA;AACA;;;;AAtJA;AAAA;AAAA,2CAyJA;AACA,cAAA,CAAA,KAAA,WAAA,EAAA;AACA;AACA,WAHA,CAIA;;;AACA,cAAA,KAAA,gBAAA,IAAA,KAAA,QAAA,EAAA,EAAA;AACA;AACA,iBAAA,KAAA,GAAA,EAAA;AACA,WARA,CASA;;;AACA,eAAA,gBAAA,GAAA,KAAA;AACA;AApKA;AAAA;AAAA,sCAqKA;AACA;AACA,cAAA,KAAA,WAAA,IAAA,CAAA,KAAA,QAAA,IAAA,KAAA,QAAA,EAAA,EAAA;AACA,iBAAA,gBAAA,GAAA,IAAA;AACA;;AACA,eAAA,SAAA;AACA;AA3KA;AAAA;AAAA,mCA4KA;AACA,iBAAA,KAAA,QAAA,OAAA,EAAA;AACA;AA9KA;AAAA;AAAA,mCA+KA;AACA,iBAAA,KAAA,KAAA,IAAA,EAAA;AACA;AAjLA;AAAA;AAAA,iCAkLA;AAAA;;AACA,cAAA,IAAA,GAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB;AACA,cAAA,KAAA,GAAA,KAAA,QAAA,EAAA;AACA,cAAA,OAAA,GAAA,KAAA,OAAA,GAAA,MAAA;AACA,cAAA,KAAA,GAAsB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,EAAb,CAAtB;;AACA,cAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,EAAA,GAAA,OAAA;AACA;;AACA,iBAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,6BAAA,KAAA,QAAA,GAAA,MAAA,GAAA,IAAH;AAAG,YAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAwF,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAkB,KAAA,KAAlB,CAAxF,CAAA,sBAA0H,IAA1H,EAA0H,IAA1H;AAAH,WAAN,EAAuJ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,UAAD,EAAC;AAAc,YAAA,KAAA,EAAA,iBAAd;AAAc,YAAA,GAAA,EAAA,aAAA,EAAA;AAAA,qBAAA,MAAA,CAAA,WAAA,GAAA,EAAA;AAAA,aAAd;AAAc,YAAA,cAAA,EAAA,KAAA,cAAd;AAAc,YAAA,SAAA,EAAA,KAAA,SAAd;AAAc,YAAA,QAAA,EAAA,KAAA,QAAd;AAAc,YAAA,SAAA,EAAA,KAAA,SAAd;AAAc,YAAA,SAAA,EAAA,KAAA,SAAd;AAAc,YAAA,IAAA,EAAA,KAAA,IAAd;AAAc,YAAA,WAAA,EAAA,KAAA,WAAA,IAAA,EAAd;AAAc,YAAA,QAAA,EAAA,KAAA,QAAd;AAAc,YAAA,QAAA,EAAA,KAAA,QAAd;AAAc,YAAA,UAAA,EAAA,KAAA,UAAd;AAAc,YAAA,IAAA,EAAA,KAAA,IAAd;AAAc,YAAA,IAAA,EAAA,KAAA,IAAd;AAAc,YAAA,IAAA,EAAA,KAAA,IAAd;AAAc,YAAA,OAAA,EAAA,KAAA,OAAd;AAAc,YAAA,MAAA,EAAA,KAAA,MAAd;AAAc,YAAA,OAAA,EAAA,KAAA,OAAd;AAAc,YAAA,SAAA,EAAA,KAAA;AAAd,WAAD,EAAif,KAAjf,CAAvJ,CAAhB;AACA;AA3LA;AAAA;AAAA,4BA4LA;AAAc,iBAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;AA5LvC;AAAA;AAAA,4BA6LA;AAA2B,iBAAA;AAC3B,wBAAA,CAAA,iBAAA,CAD2B;AAE3B,wBAAA,CAAA,iBAAA,CAF2B;AAG3B,qBAAA,CAAA,cAAA;AAH2B,WAAA;AAIrB;AAjMN;AAAA;AAAA,4BAkMA;AAAwB,iBAAA,m+HAAA;AAA4+H;AAlMpgI;;AAAA;AAAA,OAAA;;AAoMA,QAAA,WAAA,GAAA,CAAA","sourcesContent":["import { r as registerInstance, d as createEvent, f as readTask, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\r\nimport './config-3c7f3790.js';\r\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\r\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\r\n\r\nconst Textarea = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputId = `ion-input-${textareaIds++}`;\r\n        this.didBlurAfterEdit = false;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'none';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n         */\r\n        this.clearOnEdit = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the textarea.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * If `true`, the element height will increase based on the value.\r\n         */\r\n        this.autoGrow = false;\r\n        /**\r\n         * The value of the textarea.\r\n         */\r\n        this.value = '';\r\n        this.onInput = (ev) => {\r\n            if (this.nativeInput) {\r\n                this.value = this.nativeInput.value;\r\n            }\r\n            this.emitStyle();\r\n            this.ionInput.emit(ev);\r\n        };\r\n        this.onFocus = () => {\r\n            this.hasFocus = true;\r\n            this.focusChange();\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onBlur = () => {\r\n            this.hasFocus = false;\r\n            this.focusChange();\r\n            this.ionBlur.emit();\r\n        };\r\n        this.onKeyDown = () => {\r\n            this.checkClearOnEdit();\r\n        };\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    }\r\n    debounceChanged() {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n    }\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    valueChanged() {\r\n        const nativeInput = this.nativeInput;\r\n        const value = this.getValue();\r\n        if (nativeInput && nativeInput.value !== value) {\r\n            nativeInput.value = value;\r\n        }\r\n        this.runAutoGrow();\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value });\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        this.runAutoGrow();\r\n    }\r\n    // TODO: performance hit, this cause layout thrashing\r\n    runAutoGrow() {\r\n        const nativeInput = this.nativeInput;\r\n        if (nativeInput && this.autoGrow) {\r\n            readTask(() => {\r\n                nativeInput.style.height = 'inherit';\r\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\r\n     * `input.focus()`.\r\n     */\r\n    async setFocus() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the native `<textarea>` element used under the hood.\r\n     */\r\n    getInputElement() {\r\n        return Promise.resolve(this.nativeInput);\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'textarea': true,\r\n            'input': true,\r\n            'interactive-disabled': this.disabled,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus\r\n        });\r\n    }\r\n    /**\r\n     * Check if we need to clear the text input if clearOnEdit is enabled\r\n     */\r\n    checkClearOnEdit() {\r\n        if (!this.clearOnEdit) {\r\n            return;\r\n        }\r\n        // Did the input value change after it was blurred and edited?\r\n        if (this.didBlurAfterEdit && this.hasValue()) {\r\n            // Clear the input\r\n            this.value = '';\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n    }\r\n    focusChange() {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n        this.emitStyle();\r\n    }\r\n    hasValue() {\r\n        return this.getValue() !== '';\r\n    }\r\n    getValue() {\r\n        return this.value || '';\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const value = this.getValue();\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"debounce\": [\"debounceChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n    static get style() { return \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h, ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-floating.sc-ion-textarea-md-h, .item-label-floating .sc-ion-textarea-md-h, .item-label-stacked.sc-ion-textarea-md-h, .item-label-stacked .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\"; }\r\n};\r\nlet textareaIds = 0;\r\n\r\nexport { Textarea as ion_textarea };\r\n"],"sourceRoot":"webpack:///","file":"71-es5.js"}