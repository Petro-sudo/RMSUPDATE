{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-modal-md.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AACqB;AACY;AACW;AACtB;AACnB;AACgH;AAC1F;AACuC;AACzC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mEAAuB;AACnD;AACA;AACA;AACA,4BAA4B,mEAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,wEAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,8DAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAe;AAC7C;AACA;AACA,6BAA6B,gEAAe;AAC5C;AACA,uBAAuB,eAAe;AACtC;AACA,0BAA0B,gEAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe,UAAU,kBAAkB;AACxF,oCAAoC,gEAAe;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,gEAAe;AAC7C;AACA;AACA,6BAA6B,gEAAe;AAC5C;AACA,uBAAuB,eAAe;AACtC;AACA,0BAA0B,gEAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gEAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,aAAa,qCAAqC,eAAe,UAAU,uBAAuB,mCAAmC;AACrI,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAA0D;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAyD;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA,oBAAoB,2DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,QAAQ,+DAAc;AACtB,0BAA0B,2DAAW;AACrC,2BAA2B,2DAAW;AACtC,2BAA2B,2DAAW;AACtC,0BAA0B,2DAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yBAAyB,iBAAiB;AACvG,kCAAkC,yEAAe;AACjD,cAAc,6DAAS;AACvB,cAAc,+DAAO;AACrB,qBAAqB,2DAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,uDAAQ;AAC1E,kCAAkC,uDAAgB;AAClD,gCAAgC,+DAAO;AACvC;AACA,kBAAkB,yEAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA,qBAAqB,2DAAU;AAC/B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,gEAAgE,qEAAqE,EAAE,4DAAW;AAC3K,2BAA2B,0BAA0B;AACrD,aAAa,wOAAwO,EAAE,2DAAC,kBAAkB,6DAA6D,GAAG,2DAAC,SAAS,yCAAyC;AAC7X;AACA,cAAc,QAAQ,2DAAU,OAAO;AACvC,wBAAwB,4BAA4B,aAAa,iBAAiB,iBAAiB,cAAc,kBAAkB,kBAAkB,kBAAkB,kBAAkB,iBAAiB,oBAAoB,2BAA2B,8CAA8C,kBAAkB,OAAO,QAAQ,MAAM,SAAS,oBAAoB,aAAa,kBAAkB,sBAAsB,mBAAmB,qBAAqB,uBAAuB,eAAe,kCAAkC,aAAa,+BAA+B,mCAAmC,mBAAmB,2BAA2B,2BAA2B,qBAAqB,6BAA6B,6BAA6B,iCAAiC,iCAAiC,iCAAiC,6BAA6B,qCAAqC,6BAA6B,yBAAyB,WAAW,iEAAiE,mBAAmB,cAAc,eAAe,wBAAwB,2BAA2B,0BAA0B,0BAA0B,iEAAiE,mBAAmB,cAAc,gBAAgB,mBAAmB,oDAAoD,iEAAiE,mBAAmB,oBAAoB,0CAA0C,+BAA+B,wCAAwC,gCAAgC,YAAY,EAAE;AACrnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAE8B","file":"39-es2015.js","sourcesContent":["import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-80bde1aa.js';\r\nimport './config-3c7f3790.js';\r\nimport { c as clamp } from './helpers-46f4a262.js';\r\nimport { c as createAnimation } from './animation-0084d55f.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-1d592096.js';\r\nimport { createGesture } from './index-c38df685.js';\r\nimport './constants-3c3e1099.js';\r\nimport { B as BACKDROP, d as prepareOverlay, e as present, h as activeAnimations, f as dismiss, g as eventMethod } from './overlays-992cb809.js';\r\nimport { g as getClassMap } from './theme-18cbe2cc.js';\r\nimport { a as attachComponent, d as detachComponent } from './framework-delegate-c2e2e1f4.js';\r\nimport { d as deepReady } from './index-3528f139.js';\r\n\r\n// Defaults for the card swipe animation\r\nconst SwipeToCloseDefaults = {\r\n    MIN_PRESENTING_SCALE: 0.93,\r\n};\r\nconst createSwipeToCloseGesture = (el, animation, onDismiss) => {\r\n    const height = el.offsetHeight;\r\n    let isOpen = false;\r\n    const canStart = (detail) => {\r\n        const target = detail.event.target;\r\n        if (target === null ||\r\n            !target.closest) {\r\n            return true;\r\n        }\r\n        const content = target.closest('ion-content');\r\n        if (content === null) {\r\n            return true;\r\n        }\r\n        // Target is in the content so we don't start the gesture.\r\n        // We could be more nuanced here and allow it for content that\r\n        // does not need to scroll.\r\n        return false;\r\n    };\r\n    const onStart = () => {\r\n        animation.progressStart(true, (isOpen) ? 1 : 0);\r\n    };\r\n    const onMove = (detail) => {\r\n        const step = detail.deltaY / height;\r\n        if (step < 0) {\r\n            return;\r\n        }\r\n        animation.progressStep(step);\r\n    };\r\n    const onEnd = (detail) => {\r\n        const velocity = detail.velocityY;\r\n        const step = detail.deltaY / height;\r\n        if (step < 0) {\r\n            return;\r\n        }\r\n        const threshold = (detail.deltaY + velocity * 1000) / height;\r\n        const shouldComplete = threshold >= 0.5;\r\n        let newStepValue = (shouldComplete) ? -0.001 : 0.001;\r\n        if (!shouldComplete) {\r\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\r\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], step)[0];\r\n        }\r\n        else {\r\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\r\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], step)[0];\r\n        }\r\n        const duration = (shouldComplete) ? computeDuration(step * height, velocity) : computeDuration((1 - step) * height, velocity);\r\n        isOpen = shouldComplete;\r\n        gesture.enable(false);\r\n        animation\r\n            .onFinish(() => {\r\n            if (!shouldComplete) {\r\n                gesture.enable(true);\r\n            }\r\n        })\r\n            .progressEnd((shouldComplete) ? 1 : 0, newStepValue, duration);\r\n        if (shouldComplete) {\r\n            onDismiss();\r\n        }\r\n    };\r\n    const gesture = createGesture({\r\n        el,\r\n        gestureName: 'modalSwipeToClose',\r\n        gesturePriority: 40,\r\n        direction: 'y',\r\n        threshold: 10,\r\n        canStart,\r\n        onStart,\r\n        onMove,\r\n        onEnd\r\n    });\r\n    return gesture;\r\n};\r\nconst computeDuration = (remaining, velocity) => {\r\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\r\n};\r\n\r\n/**\r\n * iOS Modal Enter Animation for the Card presentation style\r\n */\r\nconst iosEnterAnimation = (baseEl, presentingEl) => {\r\n    // The top translate Y for the presenting element\r\n    const backdropAnimation = createAnimation()\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)');\r\n    const wrapperAnimation = createAnimation()\r\n        .addElement(baseEl.querySelector('.modal-wrapper'))\r\n        .beforeStyles({ 'opacity': 1 })\r\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\r\n    const baseAnimation = createAnimation()\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.32,0.72,0,1)')\r\n        .duration(500)\r\n        .beforeAddClass('show-modal')\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n    if (presentingEl) {\r\n        const modalTransform = (presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined) ? '-10px' : 'max(30px, var(--ion-safe-area-top))';\r\n        const bodyEl = document.body;\r\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\r\n        const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\r\n        const presentingAnimation = createAnimation()\r\n            .beforeStyles({\r\n            'transform': 'translateY(0)',\r\n            'transform-origin': 'top center'\r\n        })\r\n            .afterStyles({\r\n            'transform': finalTransform\r\n        })\r\n            .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\r\n            .addElement(presentingEl)\r\n            .keyframes([\r\n            { offset: 0, transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\r\n            { offset: 1, transform: finalTransform, borderRadius: '10px 10px 0 0' }\r\n        ]);\r\n        baseAnimation.addAnimation(presentingAnimation);\r\n    }\r\n    return baseAnimation;\r\n};\r\n\r\n/**\r\n * iOS Modal Leave Animation\r\n */\r\nconst iosLeaveAnimation = (baseEl, presentingEl, duration = 500) => {\r\n    const backdropAnimation = createAnimation()\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0.0);\r\n    const wrapperAnimation = createAnimation()\r\n        .addElement(baseEl.querySelector('.modal-wrapper'))\r\n        .beforeStyles({ 'opacity': 1 })\r\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\r\n    const baseAnimation = createAnimation()\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.32,0.72,0,1)')\r\n        .duration(duration)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n    if (presentingEl) {\r\n        const modalTransform = (presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined) ? '-10px' : 'max(30px, var(--ion-safe-area-top))';\r\n        const bodyEl = document.body;\r\n        const currentPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\r\n        const presentingAnimation = createAnimation()\r\n            .addElement(presentingEl)\r\n            .beforeClearStyles(['transform'])\r\n            .afterClearStyles(['transform'])\r\n            .onFinish(currentStep => {\r\n            // only reset background color if this is the last card-style modal\r\n            if (currentStep !== 1) {\r\n                return;\r\n            }\r\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal')).filter(m => m.presentingElement !== undefined).length;\r\n            if (numModals <= 1) {\r\n                bodyEl.style.setProperty('background-color', '');\r\n            }\r\n        })\r\n            .keyframes([\r\n            { offset: 0, transform: `translateY(${modalTransform}) scale(${currentPresentingScale})`, borderRadius: '10px 10px 0 0' },\r\n            { offset: 1, transform: 'translateY(0px) scale(1)', borderRadius: '0px' }\r\n        ]);\r\n        baseAnimation.addAnimation(presentingAnimation);\r\n    }\r\n    return baseAnimation;\r\n};\r\n\r\n/**\r\n * Md Modal Enter Animation\r\n */\r\nconst mdEnterAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)');\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.modal-wrapper'))\r\n        .keyframes([\r\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\r\n        { offset: 1, opacity: 1, transform: 'translateY(0px)' }\r\n    ]);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\r\n        .duration(280)\r\n        .beforeAddClass('show-modal')\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\n/**\r\n * Md Modal Leave Animation\r\n */\r\nconst mdLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    const wrapperEl = baseEl.querySelector('.modal-wrapper');\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0.0);\r\n    wrapperAnimation\r\n        .addElement(wrapperEl)\r\n        .keyframes([\r\n        { offset: 0, opacity: 0.99, transform: 'translateY(0px)' },\r\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' }\r\n    ]);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\r\n        .duration(200)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\nconst Modal = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        // Whether or not modal is being dismissed via gesture\r\n        this.gestureAnimationDismissing = false;\r\n        this.presented = false;\r\n        this.mode = getIonMode(this);\r\n        /**\r\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\r\n         */\r\n        this.keyboardClose = true;\r\n        /**\r\n         * If `true`, the modal will be dismissed when the backdrop is clicked.\r\n         */\r\n        this.backdropDismiss = true;\r\n        /**\r\n         * If `true`, a backdrop will be displayed behind the modal.\r\n         */\r\n        this.showBackdrop = true;\r\n        /**\r\n         * If `true`, the modal will animate.\r\n         */\r\n        this.animated = true;\r\n        /**\r\n         * If `true`, the modal can be swiped to dismiss. Only applies in iOS mode.\r\n         */\r\n        this.swipeToClose = false;\r\n        this.onBackdropTap = () => {\r\n            this.dismiss(undefined, BACKDROP);\r\n        };\r\n        this.onDismiss = (ev) => {\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            this.dismiss();\r\n        };\r\n        this.onLifecycle = (modalEvent) => {\r\n            const el = this.usersElement;\r\n            const name = LIFECYCLE_MAP[modalEvent.type];\r\n            if (el && name) {\r\n                const ev = new CustomEvent(name, {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    detail: modalEvent.detail\r\n                });\r\n                el.dispatchEvent(ev);\r\n            }\r\n        };\r\n        prepareOverlay(this.el);\r\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\r\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\r\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\r\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\r\n    }\r\n    /**\r\n     * Present the modal overlay after it has been created.\r\n     */\r\n    async present() {\r\n        if (this.presented) {\r\n            return;\r\n        }\r\n        const container = this.el.querySelector(`.modal-wrapper`);\r\n        if (!container) {\r\n            throw new Error('container is undefined');\r\n        }\r\n        const componentProps = Object.assign(Object.assign({}, this.componentProps), { modal: this.el });\r\n        this.usersElement = await attachComponent(this.delegate, container, this.component, ['ion-page'], componentProps);\r\n        await deepReady(this.usersElement);\r\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, this.presentingElement);\r\n        const mode = getIonMode(this);\r\n        if (this.swipeToClose && mode === 'ios') {\r\n            // All of the elements needed for the swipe gesture\r\n            // should be in the DOM and referenced by now, except\r\n            // for the presenting el\r\n            const ani = this.animation = iosLeaveAnimation(this.el, this.presentingElement);\r\n            this.gesture = createSwipeToCloseGesture(this.el, ani, () => {\r\n                /**\r\n                 * While the gesture animation is finishing\r\n                 * it is possible for a user to tap the backdrop.\r\n                 * This would result in the dismiss animation\r\n                 * being played again. Typically this is avoided\r\n                 * by setting `presented = false` on the overlay\r\n                 * component; however, we cannot do that here as\r\n                 * that would prevent the element from being\r\n                 * removed from the DOM.\r\n                 */\r\n                this.gestureAnimationDismissing = true;\r\n                this.animation.onFinish(async () => {\r\n                    await this.dismiss(undefined, 'gesture');\r\n                    this.gestureAnimationDismissing = false;\r\n                });\r\n            });\r\n            this.gesture.enable(true);\r\n        }\r\n    }\r\n    /**\r\n     * Dismiss the modal overlay after it has been presented.\r\n     *\r\n     * @param data Any data to emit in the dismiss events.\r\n     * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\r\n     */\r\n    async dismiss(data, role) {\r\n        if (this.gestureAnimationDismissing && role !== 'gesture') {\r\n            return false;\r\n        }\r\n        const iosAni = (this.animation === undefined || (role === BACKDROP || role === undefined)) ? iosLeaveAnimation : undefined;\r\n        const enteringAnimation = activeAnimations.get(this) || [];\r\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosAni, mdLeaveAnimation, this.presentingElement);\r\n        if (dismissed) {\r\n            await detachComponent(this.delegate, this.usersElement);\r\n            if (this.animation) {\r\n                this.animation.destroy();\r\n            }\r\n            enteringAnimation.forEach(ani => ani.destroy());\r\n        }\r\n        this.animation = undefined;\r\n        return dismissed;\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the modal did dismiss.\r\n     */\r\n    onDidDismiss() {\r\n        return eventMethod(this.el, 'ionModalDidDismiss');\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the modal will dismiss.\r\n     */\r\n    onWillDismiss() {\r\n        return eventMethod(this.el, 'ionModalWillDismiss');\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { \"no-router\": true, \"aria-modal\": \"true\", class: Object.assign({ [mode]: true, [`modal-card`]: this.presentingElement !== undefined }, getClassMap(this.cssClass)), style: {\r\n                zIndex: `${20000 + this.overlayIndex}`,\r\n            }, onIonBackdropTap: this.onBackdropTap, onIonDismiss: this.onDismiss, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle }, h(\"ion-backdrop\", { visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { role: \"dialog\", class: \"modal-wrapper\" })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get style() { return \".sc-ion-modal-md-h{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color,#fff);--box-shadow:none;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:strict}.overlay-hidden.sc-ion-modal-md-h{display:none}.modal-wrapper.sc-ion-modal-md{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}\\@media only screen and (min-width:768px) and (min-height:600px){.sc-ion-modal-md-h{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}\\@media only screen and (min-width:768px) and (min-height:768px){.sc-ion-modal-md-h{--width:600px;--height:600px}}.sc-ion-modal-md-h{--backdrop-opacity:var(--ion-backdrop-opacity,0.32)}\\@media only screen and (min-width:768px) and (min-height:600px){.sc-ion-modal-md-h{--border-radius:2px;--box-shadow:0 28px 48px rgba(0,0,0,0.4)}}.modal-wrapper.sc-ion-modal-md{-webkit-transform:translate3d(0,40px,0);transform:translate3d(0,40px,0);opacity:.01}\"; }\r\n};\r\nconst LIFECYCLE_MAP = {\r\n    'ionModalDidPresent': 'ionViewDidEnter',\r\n    'ionModalWillPresent': 'ionViewWillEnter',\r\n    'ionModalWillDismiss': 'ionViewWillLeave',\r\n    'ionModalDidDismiss': 'ionViewDidLeave',\r\n};\r\n\r\nexport { Modal as ion_modal };\r\n"],"sourceRoot":"webpack:///"}