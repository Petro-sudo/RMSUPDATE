{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-alert-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AACC;AACgC;AACyF;AACjG;AACM;;AAE7D;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAsD;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAkD;AAC3D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAsD;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA,oBAAoB,2DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uDAAQ;AAC5C;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB;AACA;AACA;AACA;AACA,QAAQ,+DAAc;AACtB,0BAA0B,2DAAW;AACrC,2BAA2B,2DAAW;AACtC,2BAA2B,2DAAW;AACtC,0BAA0B,2DAAW;AACrC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4CAA4C;AACtG;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,GAAG,MAAM;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAO;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAQ;AACpB,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2DAAU;AAC/B;AACA;AACA;AACA,gBAAgB,2DAAC,SAAS,+DAA+D,mBAAmB,2DAAC,YAAY,oEAAoE,UAAU;AACvM;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,EAAE,2DAAC,SAAS,8BAA8B,EAAE,2DAAC,SAAS,+BAA+B,EAAE,2DAAC,SAAS,gCAAgC,IAAI,2DAAC,SAAS,gCAAgC,8BAA8B,2DAAC;AAC7N;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAC,SAAS,wHAAwH,mBAAmB,2DAAC,YAAY,oEAAoE,UAAU;AAChQ;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB,EAAE,2DAAC,SAAS,8BAA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","file":"2-es2015.js","sourcesContent":["import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-80bde1aa.js';\r\nimport './config-3c7f3790.js';\r\nimport './helpers-46f4a262.js';\r\nimport { c as createAnimation } from './animation-0084d55f.js';\r\nimport { B as BACKDROP, i as isCancel, d as prepareOverlay, e as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-992cb809.js';\r\nimport { g as getClassMap } from './theme-18cbe2cc.js';\r\nimport { s as sanitizeDOMString } from './index-3476b023.js';\r\n\r\n/**\r\n * iOS Alert Enter Animation\r\n */\r\nconst iosEnterAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)');\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.alert-wrapper'))\r\n        .keyframes([\r\n        { offset: 0, opacity: '0.01', transform: 'scale(1.1)' },\r\n        { offset: 1, opacity: '1', transform: 'scale(1)' }\r\n    ]);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease-in-out')\r\n        .duration(200)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\n/**\r\n * iOS Alert Leave Animation\r\n */\r\nconst iosLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.alert-wrapper'))\r\n        .keyframes([\r\n        { offset: 0, opacity: 0.99, transform: 'scale(1)' },\r\n        { offset: 1, opacity: 0, transform: 'scale(0.9)' }\r\n    ]);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease-in-out')\r\n        .duration(200)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\n/**\r\n * Md Alert Enter Animation\r\n */\r\nconst mdEnterAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)');\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.alert-wrapper'))\r\n        .keyframes([\r\n        { offset: 0, opacity: '0.01', transform: 'scale(0.9)' },\r\n        { offset: 1, opacity: '1', transform: 'scale(1)' }\r\n    ]);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease-in-out')\r\n        .duration(150)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\n/**\r\n * Md Alert Leave Animation\r\n */\r\nconst mdLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.alert-wrapper'))\r\n        .fromTo('opacity', 0.99, 0);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease-in-out')\r\n        .duration(150)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\n\r\nconst Alert = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.processedInputs = [];\r\n        this.processedButtons = [];\r\n        this.presented = false;\r\n        this.mode = getIonMode(this);\r\n        /**\r\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\r\n         */\r\n        this.keyboardClose = true;\r\n        /**\r\n         * Array of buttons to be added to the alert.\r\n         */\r\n        this.buttons = [];\r\n        /**\r\n         * Array of input to show in the alert.\r\n         */\r\n        this.inputs = [];\r\n        /**\r\n         * If `true`, the alert will be dismissed when the backdrop is clicked.\r\n         */\r\n        this.backdropDismiss = true;\r\n        /**\r\n         * If `true`, the alert will be translucent.\r\n         * Only applies when the mode is `\"ios\"` and the device supports\r\n         * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\r\n         */\r\n        this.translucent = false;\r\n        /**\r\n         * If `true`, the alert will animate.\r\n         */\r\n        this.animated = true;\r\n        this.onBackdropTap = () => {\r\n            this.dismiss(undefined, BACKDROP);\r\n        };\r\n        this.dispatchCancelHandler = (ev) => {\r\n            const role = ev.detail.role;\r\n            if (isCancel(role)) {\r\n                const cancelButton = this.processedButtons.find(b => b.role === 'cancel');\r\n                this.callButtonHandler(cancelButton);\r\n            }\r\n        };\r\n        prepareOverlay(this.el);\r\n        this.didPresent = createEvent(this, \"ionAlertDidPresent\", 7);\r\n        this.willPresent = createEvent(this, \"ionAlertWillPresent\", 7);\r\n        this.willDismiss = createEvent(this, \"ionAlertWillDismiss\", 7);\r\n        this.didDismiss = createEvent(this, \"ionAlertDidDismiss\", 7);\r\n    }\r\n    buttonsChanged() {\r\n        const buttons = this.buttons;\r\n        this.processedButtons = buttons.map(btn => {\r\n            return (typeof btn === 'string')\r\n                ? { text: btn, role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined }\r\n                : btn;\r\n        });\r\n    }\r\n    inputsChanged() {\r\n        const inputs = this.inputs;\r\n        // An alert can be created with several different inputs. Radios,\r\n        // checkboxes and inputs are all accepted, but they cannot be mixed.\r\n        const inputTypes = new Set(inputs.map(i => i.type));\r\n        if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\r\n            console.warn(`Alert cannot mix input types: ${(Array.from(inputTypes.values()).join('/'))}. Please see alert docs for more info.`);\r\n        }\r\n        this.inputType = inputTypes.values().next().value;\r\n        this.processedInputs = inputs.map((i, index) => ({\r\n            type: i.type || 'text',\r\n            name: i.name || `${index}`,\r\n            placeholder: i.placeholder || '',\r\n            value: i.value,\r\n            label: i.label,\r\n            checked: !!i.checked,\r\n            disabled: !!i.disabled,\r\n            id: i.id || `alert-input-${this.overlayIndex}-${index}`,\r\n            handler: i.handler,\r\n            min: i.min,\r\n            max: i.max\r\n        }));\r\n    }\r\n    componentWillLoad() {\r\n        this.inputsChanged();\r\n        this.buttonsChanged();\r\n    }\r\n    /**\r\n     * Present the alert overlay after it has been created.\r\n     */\r\n    present() {\r\n        return present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation);\r\n    }\r\n    /**\r\n     * Dismiss the alert overlay after it has been presented.\r\n     *\r\n     * @param data Any data to emit in the dismiss events.\r\n     * @param role The role of the element that is dismissing the alert.\r\n     * This can be useful in a button handler for determining which button was\r\n     * clicked to dismiss the alert.\r\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\r\n     */\r\n    dismiss(data, role) {\r\n        return dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the alert did dismiss.\r\n     */\r\n    onDidDismiss() {\r\n        return eventMethod(this.el, 'ionAlertDidDismiss');\r\n    }\r\n    /**\r\n     * Returns a promise that resolves when the alert will dismiss.\r\n     */\r\n    onWillDismiss() {\r\n        return eventMethod(this.el, 'ionAlertWillDismiss');\r\n    }\r\n    rbClick(selectedInput) {\r\n        for (const input of this.processedInputs) {\r\n            input.checked = input === selectedInput;\r\n        }\r\n        this.activeId = selectedInput.id;\r\n        safeCall(selectedInput.handler, selectedInput);\r\n        this.el.forceUpdate();\r\n    }\r\n    cbClick(selectedInput) {\r\n        selectedInput.checked = !selectedInput.checked;\r\n        safeCall(selectedInput.handler, selectedInput);\r\n        this.el.forceUpdate();\r\n    }\r\n    buttonClick(button) {\r\n        const role = button.role;\r\n        const values = this.getValues();\r\n        if (isCancel(role)) {\r\n            return this.dismiss({ values }, role);\r\n        }\r\n        const returnData = this.callButtonHandler(button, values);\r\n        if (returnData !== false) {\r\n            return this.dismiss(Object.assign({ values }, returnData), button.role);\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n    callButtonHandler(button, data) {\r\n        if (button && button.handler) {\r\n            // a handler has been provided, execute it\r\n            // pass the handler the values from the inputs\r\n            const returnData = safeCall(button.handler, data);\r\n            if (returnData === false) {\r\n                // if the return value of the handler is false then do not dismiss\r\n                return false;\r\n            }\r\n            if (typeof returnData === 'object') {\r\n                return returnData;\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n    getValues() {\r\n        if (this.processedInputs.length === 0) {\r\n            // this is an alert without any options/inputs at all\r\n            return undefined;\r\n        }\r\n        if (this.inputType === 'radio') {\r\n            // this is an alert with radio buttons (single value select)\r\n            // return the one value which is checked, otherwise undefined\r\n            const checkedInput = this.processedInputs.find(i => !!i.checked);\r\n            return checkedInput ? checkedInput.value : undefined;\r\n        }\r\n        if (this.inputType === 'checkbox') {\r\n            // this is an alert with checkboxes (multiple value select)\r\n            // return an array of all the checked values\r\n            return this.processedInputs.filter(i => i.checked).map(i => i.value);\r\n        }\r\n        // this is an alert with text inputs\r\n        // return an object of all the values with the input name as the key\r\n        const values = {};\r\n        this.processedInputs.forEach(i => {\r\n            values[i.name] = i.value || '';\r\n        });\r\n        return values;\r\n    }\r\n    renderAlertInputs(labelledBy) {\r\n        switch (this.inputType) {\r\n            case 'checkbox': return this.renderCheckbox(labelledBy);\r\n            case 'radio': return this.renderRadio(labelledBy);\r\n            default: return this.renderInput(labelledBy);\r\n        }\r\n    }\r\n    renderCheckbox(labelledby) {\r\n        const inputs = this.processedInputs;\r\n        const mode = getIonMode(this);\r\n        if (inputs.length === 0) {\r\n            return null;\r\n        }\r\n        return (h(\"div\", { class: \"alert-checkbox-group\", \"aria-labelledby\": labelledby }, inputs.map(i => (h(\"button\", { type: \"button\", onClick: () => this.cbClick(i), \"aria-checked\": `${i.checked}`, id: i.id, disabled: i.disabled, tabIndex: 0, role: \"checkbox\", class: {\r\n                'alert-tappable': true,\r\n                'alert-checkbox': true,\r\n                'alert-checkbox-button': true,\r\n                'ion-focusable': true,\r\n                'alert-checkbox-button-disabled': i.disabled || false\r\n            } }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-checkbox-icon\" }, h(\"div\", { class: \"alert-checkbox-inner\" })), h(\"div\", { class: \"alert-checkbox-label\" }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null))))));\r\n    }\r\n    renderRadio(labelledby) {\r\n        const inputs = this.processedInputs;\r\n        if (inputs.length === 0) {\r\n            return null;\r\n        }\r\n        return (h(\"div\", { class: \"alert-radio-group\", role: \"radiogroup\", \"aria-labelledby\": labelledby, \"aria-activedescendant\": this.activeId }, inputs.map(i => (h(\"button\", { type: \"button\", onClick: () => this.rbClick(i), \"aria-checked\": `${i.checked}`, disabled: i.disabled, id: i.id, tabIndex: 0, class: {\r\n                'alert-radio-button': true,\r\n                'alert-tappable': true,\r\n                'alert-radio': true,\r\n                'ion-focusable': true,\r\n                'alert-radio-button-disabled': i.disabled || false\r\n            }, role: \"radio\" }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-radio-icon\" }, h(\"div\", { class: \"alert-radio-inner\" })), h(\"div\", { class: \"alert-radio-label\" }, i.label)))))));\r\n    }\r\n    renderInput(labelledby) {\r\n        const inputs = this.processedInputs;\r\n        if (inputs.length === 0) {\r\n            return null;\r\n        }\r\n        return (h(\"div\", { class: \"alert-input-group\", \"aria-labelledby\": labelledby }, inputs.map(i => {\r\n            if (i.type === 'textarea') {\r\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"textarea\", { placeholder: i.placeholder, value: i.value, onInput: e => i.value = e.target.value, id: i.id, disabled: i.disabled, tabIndex: 0, class: {\r\n                        'alert-input': true,\r\n                        'alert-input-disabled': i.disabled || false\r\n                    } })));\r\n            }\r\n            else {\r\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"input\", { placeholder: i.placeholder, value: i.value, type: i.type, min: i.min, max: i.max, onInput: e => i.value = e.target.value, id: i.id, disabled: i.disabled, tabIndex: 0, class: {\r\n                        'alert-input': true,\r\n                        'alert-input-disabled': i.disabled || false\r\n                    } })));\r\n            }\r\n        })));\r\n    }\r\n    renderAlertButtons() {\r\n        const buttons = this.processedButtons;\r\n        const mode = getIonMode(this);\r\n        const alertButtonGroupClass = {\r\n            'alert-button-group': true,\r\n            'alert-button-group-vertical': buttons.length > 2\r\n        };\r\n        return (h(\"div\", { class: alertButtonGroupClass }, buttons.map(button => h(\"button\", { type: \"button\", class: buttonClass(button), tabIndex: 0, onClick: () => this.buttonClick(button) }, h(\"span\", { class: \"alert-button-inner\" }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null)))));\r\n    }\r\n    render() {\r\n        const { overlayIndex, header, subHeader } = this;\r\n        const mode = getIonMode(this);\r\n        const hdrId = `alert-${overlayIndex}-hdr`;\r\n        const subHdrId = `alert-${overlayIndex}-sub-hdr`;\r\n        const msgId = `alert-${overlayIndex}-msg`;\r\n        let labelledById;\r\n        if (header !== undefined) {\r\n            labelledById = hdrId;\r\n        }\r\n        else if (subHeader !== undefined) {\r\n            labelledById = subHdrId;\r\n        }\r\n        return (h(Host, { role: \"dialog\", \"aria-modal\": \"true\", style: {\r\n                zIndex: `${20000 + overlayIndex}`,\r\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'alert-translucent': this.translucent }), onIonAlertWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }, h(\"ion-backdrop\", { tappable: this.backdropDismiss }), h(\"div\", { class: \"alert-wrapper\" }, h(\"div\", { class: \"alert-head\" }, header && h(\"h2\", { id: hdrId, class: \"alert-title\" }, header), subHeader && h(\"h2\", { id: subHdrId, class: \"alert-sub-title\" }, subHeader)), h(\"div\", { id: msgId, class: \"alert-message\", innerHTML: sanitizeDOMString(this.message) }), this.renderAlertInputs(labelledById), this.renderAlertButtons())));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"buttons\": [\"buttonsChanged\"],\r\n        \"inputs\": [\"inputsChanged\"]\r\n    }; }\r\n    static get style() { return \".sc-ion-alert-ios-h{--min-width:250px;--width:auto;--min-height:auto;--height:auto;--max-height:90%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-family:var(--ion-font-family,inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-alert-ios-h{display:none}.alert-top.sc-ion-alert-ios-h{padding-top:50px;-ms-flex-align:start;align-items:flex-start}.alert-wrapper.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:content;opacity:0;z-index:10}.alert-title.sc-ion-alert-ios{margin-top:0}.alert-sub-title.sc-ion-alert-ios, .alert-title.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}.alert-sub-title.sc-ion-alert-ios{margin-top:5px;font-weight:400}.alert-message.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-overflow-scrolling:touch;overflow-y:auto;overscroll-behavior-y:contain}.alert-checkbox-group.sc-ion-alert-ios::-webkit-scrollbar, .alert-message.sc-ion-alert-ios::-webkit-scrollbar, .alert-radio-group.sc-ion-alert-ios::-webkit-scrollbar{display:none}.alert-input.sc-ion-alert-ios{padding-left:0;padding-right:0;padding-top:10px;padding-bottom:10px;width:100%;border:0;background:inherit;font:inherit;-webkit-box-sizing:border-box;box-sizing:border-box}.alert-button-group.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:100%}.alert-button-group-vertical.sc-ion-alert-ios{-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.alert-button.sc-ion-alert-ios{display:block;border:0;font-size:14px;line-height:20px;z-index:0}.alert-button.ion-focused.sc-ion-alert-ios, .alert-tappable.ion-focused.sc-ion-alert-ios{background:var(--ion-color-step-100,#e6e6e6)}.alert-button-inner.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%}.alert-checkbox-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios, .alert-input-disabled.sc-ion-alert-ios, .alert-radio-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios{cursor:default;opacity:.5;pointer-events:none}.alert-tappable.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:-ms-flexbox;display:flex;width:100%;border:0;background:transparent;font-size:inherit;line-height:normal;text-align:start;-webkit-appearance:none;-moz-appearance:none;appearance:none;contain:strict}.alert-button.sc-ion-alert-ios, .alert-checkbox.sc-ion-alert-ios, .alert-input.sc-ion-alert-ios, .alert-radio.sc-ion-alert-ios{outline:none}.alert-checkbox-icon.sc-ion-alert-ios, .alert-checkbox-inner.sc-ion-alert-ios, .alert-radio-icon.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box}textarea.alert-input.sc-ion-alert-ios{min-height:37px;resize:none}.sc-ion-alert-ios-h{--background:var(--ion-overlay-background-color,var(--ion-color-step-100,#f9f9f9));--max-width:270px;--backdrop-opacity:var(--ion-backdrop-opacity,0.3);font-size:14px}.alert-wrapper.sc-ion-alert-ios{border-radius:13px;-webkit-box-shadow:none;box-shadow:none;overflow:hidden}\\@supports ((-webkit-backdrop-filter:blur(0)) or (backdrop-filter:blur(0))){.alert-translucent.sc-ion-alert-ios-h .alert-wrapper.sc-ion-alert-ios{background:rgba(var(--ion-background-color-rgb,255,255,255),.9);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}.alert-head.sc-ion-alert-ios{padding-left:16px;padding-right:16px;padding-top:12px;padding-bottom:7px;text-align:center}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-head.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.alert-title.sc-ion-alert-ios{margin-top:8px;color:var(--ion-text-color,#000);font-size:17px;font-weight:600}.alert-sub-title.sc-ion-alert-ios{color:var(--ion-color-step-600,#666);font-size:14px}.alert-input-group.sc-ion-alert-ios, .alert-message.sc-ion-alert-ios{padding-left:16px;padding-right:16px;padding-top:0;padding-bottom:21px;color:var(--ion-text-color,#000);font-size:13px;text-align:center}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-input-group.sc-ion-alert-ios, .alert-message.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.alert-message.sc-ion-alert-ios{max-height:240px}.alert-message.sc-ion-alert-ios:empty{padding-left:0;padding-right:0;padding-top:0;padding-bottom:12px}.alert-input.sc-ion-alert-ios{border-radius:4px;margin-top:10px;padding-left:6px;padding-right:6px;padding-top:6px;padding-bottom:6px;border:.55px solid var(--ion-color-step-250,#bfbfbf);background-color:var(--ion-background-color,#fff);-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-input.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:6px;padding-inline-start:6px;-webkit-padding-end:6px;padding-inline-end:6px}}.alert-input.sc-ion-alert-ios::-webkit-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-moz-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios:-ms-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-clear{display:none}.alert-checkbox-group.sc-ion-alert-ios, .alert-radio-group.sc-ion-alert-ios{-ms-scroll-chaining:none;overscroll-behavior:contain;max-height:240px;border-top:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);overflow-y:auto;-webkit-overflow-scrolling:touch}.alert-tappable.sc-ion-alert-ios{height:44px}.alert-radio-label.sc-ion-alert-ios{padding-left:13px;padding-right:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;-ms-flex-order:0;order:0;color:var(--ion-text-color,#000);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-radio-label.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px}}[aria-checked=true].sc-ion-alert-ios .alert-radio-label.sc-ion-alert-ios{color:var(--ion-color-primary,#3880ff)}.alert-radio-icon.sc-ion-alert-ios{position:relative;-ms-flex-order:1;order:1;min-width:30px}[aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{left:7px;top:-7px;position:absolute;width:6px;height:12px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-color-primary,#3880ff)}[dir=rtl].sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios, [dir=rtl] .sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios, [dir=rtl].sc-ion-alert-ios [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{left:unset;right:unset;right:7px}.alert-checkbox-label.sc-ion-alert-ios{padding-left:13px;padding-right:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;color:var(--ion-text-color,#000);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-checkbox-label.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px}}.alert-checkbox-icon.sc-ion-alert-ios{border-radius:50%;margin-left:16px;margin-right:6px;margin-top:10px;margin-bottom:10px;position:relative;width:24px;height:24px;border-width:1px;border-style:solid;border-color:var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)));background-color:var(--ion-item-background,var(--ion-background-color,#fff));contain:strict}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-checkbox-icon.sc-ion-alert-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:6px;margin-inline-end:6px}}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-icon.sc-ion-alert-ios{border-color:var(--ion-color-primary,#3880ff);background-color:var(--ion-color-primary,#3880ff)}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{left:9px;top:4px;position:absolute;width:5px;height:12px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:1px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-background-color,#fff)}[dir=rtl].sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios, [dir=rtl] .sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios, [dir=rtl].sc-ion-alert-ios [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{left:unset;right:unset;right:9px}.alert-button-group.sc-ion-alert-ios{margin-right:-.55px;-ms-flex-wrap:wrap;flex-wrap:wrap}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-button-group.sc-ion-alert-ios{margin-right:unset;-webkit-margin-end:-.55px;margin-inline-end:-.55px}}.alert-button.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:0;-ms-flex:1 1 auto;flex:1 1 auto;min-width:50%;height:44px;border-top:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);border-right:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);background-color:transparent;color:var(--ion-color-primary,#3880ff);font-size:17px;overflow:hidden}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child, [dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child, [dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:first-child{border-right:0}.alert-button.sc-ion-alert-ios:last-child{border-right:0;font-weight:700}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child, [dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child, [dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child{border-right:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2)}.alert-button.ion-activated.sc-ion-alert-ios{background-color:rgba(var(--ion-text-color-rgb,0,0,0),.1)}\"; }\r\n};\r\nconst buttonClass = (button) => {\r\n    return Object.assign({ 'alert-button': true, 'ion-focusable': true, 'ion-activatable': true }, getClassMap(button.cssClass));\r\n};\r\n\r\nexport { Alert as ion_alert };\r\n"],"sourceRoot":"webpack:///"}