{"version":3,"sources":["./src/app/sturegister/sturegister.page.html","./src/app/sturegister/sturegister-routing.module.ts","./src/app/sturegister/sturegister.module.ts","./src/app/sturegister/sturegister.page.scss","./src/app/sturegister/sturegister.page.ts"],"names":[],"mappings":"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","file":"sturegister-sturegister-module-es2015.js","sourcesContent":["export default \"  \\r\\n<!-- <ion-card>\\r\\n  <img src=\\\"assets/pics/tut1.jpg\\\" width=\\\"1500px\\\" height=\\\"200px\\\" alt=\\\"\\\">\\r\\n</ion-card> -->\\r\\n\\r\\n <ion-content >\\r\\n  <ion-toolbar>\\r\\n    <div slot=\\\"start\\\" style=\\\"font-size: small; \\\">\\r\\n      <img src=\\\" assets/pics/logo.png\\\" width=\\\"80px\\\" height=\\\"40px\\\" alt=\\\"\\\">\\r\\n     </div>\\r\\n    <ul class=\\\"sidebar-nav\\\" style=\\\"text-align: center;font-size: small\\\">\\r\\n      <li><a routerLink=\\\"/help/helpstud\\\">HELP</a></li>\\r\\n      <li><a routerLink=\\\"#\\\">FAQS</a></li>\\r\\n      <li><a routerLink=\\\"/folder/home\\\">HOME</a></li>\\r\\n    </ul>\\r\\n    <br>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <br><br> <br> <br>\\r\\n\\r\\n  <p style=\\\"color: white;\\\">Register to create an account</p>\\r\\n  <div class=\\\"container\\\">\\r\\n  <form novalidate\\r\\n      [formGroup]=\\\"myform\\\" >\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n <!-- <fieldset formGroupName=\\\"name\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{\\r\\n        'has-danger': firstName.invalid && (firstName.dirty || firstName.touched),\\r\\n        'has-success': firstName.valid && (firstName.dirty || firstName.touched)\\r\\n      }\\\">\\r\\n      <ion-item>\\r\\n      <ion-label position=\\\"fixed\\\">First Name:</ion-label>\\r\\n    <br>\\r\\n      <ion-input type=\\\"text\\\"\\r\\n      \\r\\n             class=\\\"form-control\\\"\\r\\n             formControlName=\\\"firstName\\\"\\r\\n             required  [(ngModel)] = \\\"stuData.firstName\\\">\\r\\n            </ion-input>\\r\\n      <div class=\\\"form-control-feedback\\\"\\r\\n           *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\" color=\\\"warning\\\">\\r\\n        <p  style=\\\"color:red\\\" *ngIf=\\\"firstName.errors.required\\\" >First Name is required</p>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n    </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n        <pre>Valid? {{ myform.controls.name.controls.firstName.valid }}</pre>\\r\\n        <pre>Dirty? {{ myform.controls.name.controls.firstName.dirty }}</pre>\\r\\n     \\r\\n    </div> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{\\r\\n        'has-danger': lastName.invalid && (lastName.dirty || lastName.touched),\\r\\n        'has-success': lastName.valid && (lastName.dirty || lastName.touched)\\r\\n      }\\\">\\r\\n      <ion-item>\\r\\n      <ion-label position=\\\"fixed\\\">Last Name:</ion-label>\\r\\n      \\r\\n      <br>\\r\\n      <ion-input type=\\\"text\\\"\\r\\n      required  [(ngModel)] = \\\"stuData.lastName\\\"\\r\\n             class=\\\"form-control\\\"\\r\\n             formControlName=\\\"lastName\\\"\\r\\n             required>\\r\\n            </ion-input>\\r\\n      <div class=\\\"form-control-feedback\\\"\\r\\n           *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\">\\r\\n        <p style=\\\"color:red\\\" *ngIf=\\\"lastName.errors.required\\\">Last Name is required</p>\\r\\n      </div>\\r\\n    </ion-item>\\r\\n    </div>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"fixed\\\">Gender</ion-label>\\r\\n      <br>\\r\\n      <ion-input [(ngModel)] = \\\"stuData.gender\\\" type=\\\"gender\\\"\\r\\n       \\r\\n             \\r\\n             required>\\r\\n             </ion-input></ion-item>\\r\\n\\r\\n  </fieldset>\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': email.invalid && (email.dirty || email.touched),\\r\\n        'has-success': email.valid && (email.dirty || email.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n   <ion-label position=\\\"fixed\\\">Email:</ion-label>\\r\\n   <br>\\r\\n    \\r\\n    <ion-input type=\\\"email\\\"\\r\\n    required  [(ngModel)] = \\\"stuData.email\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"email\\\"\\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"email.errors.required\\\">Email is required</p>\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"password.errors.pattern\\\">email must contain at least the @ character</p>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n\\r\\n    \\r\\n      <pre>Valid? {{ myform.controls.email.valid }}</pre>\\r\\n      <pre>Dirty? {{ myform.controls.email.dirty }}</pre>\\r\\n   \\r\\n\\r\\n  </div> -->\\r\\n\\r\\n  \\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': studno.invalid && (studno.dirty || studno.touched),\\r\\n        'has-success': studno.valid && (studno.dirty || studno.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n   <ion-label position=\\\"floating\\\"><ion-icon name=\\\"person\\\"></ion-icon> STUDENT NUMBER</ion-label>\\r\\n    <ion-input type=\\\"number\\\"\\r\\n    required  [(ngModel)] = \\\"stuData.studno\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"studno\\\"\\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"studno.errors && (studno.dirty || studno.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"studno.errors.required\\\">Student Number is required</p>\\r\\n     \\r\\n    </div>\\r\\n  </ion-item>\\r\\n\\r\\n    <!--\\r\\n      <pre>Valid? {{ myform.controls.studno.valid }}</pre>\\r\\n      <pre>Dirty? {{ myform.controls.studno.dirty }}</pre>\\r\\n    -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': id_no.invalid && (id_no.dirty || id_no.touched),\\r\\n        'has-success': id_no.valid && (id_no.dirty || id_no.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n   <ion-label position=\\\"fixed\\\">ID Number:</ion-label>\\r\\n  \\r\\n    <br>\\r\\n    <ion-input type=\\\"number\\\"\\r\\n    required  [(ngModel)] = \\\"stuData.id_no\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"id_no\\\"\\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"id_no.errors && (id_no.dirty || id_no.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"id_no.errors.required\\\">ID is required</p>\\r\\n     \\r\\n    </div>\\r\\n  </ion-item>\\r\\n\\r\\n    \\r\\n      <pre>Valid? {{ myform.controls.email.valid }}</pre>\\r\\n      <pre>Dirty? {{ myform.controls.email.dirty }}</pre>\\r\\n   \\r\\n\\r\\n  </div> -->\\r\\n  <!-- <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': cell_no.invalid && (cell_no.dirty || cell_no.touched),\\r\\n        'has-success': cell_no.valid && (cell_no.dirty || cell_no.touched)\\r\\n   }\\\">\\r\\n   <ion-label position=\\\"fixed\\\">cell Number:</ion-label>\\r\\n  \\r\\n    \\r\\n    <ion-input type=\\\"number\\\"\\r\\n    required  [(ngModel)] = \\\"stuData.cell_no\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"cell_no\\\"\\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"cell_no.errors && (cell_no.dirty || cell_no.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"cell_no.errors.required\\\">cell number is required</p>\\r\\n    </div>\\r\\n \\r\\n\\r\\n   \\r\\n  </div> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <div class=\\\"form-group\\\"\\r\\n  [ngClass]=\\\"{\\r\\n   'has-danger': password.invalid && (password.dirty || password.touched),\\r\\n   'has-success': password.valid && (password.dirty || password.touched)\\r\\n}\\\">\\r\\n\\r\\n<ion-label>Select Campus location</ion-label>\\r\\n  <ion-item>\\r\\n   \\r\\n    <ion-select placeholder=\\\"Select campus\\\"   class=\\\"form-control\\\"\\r\\n    formControlName=\\\"campus_loc\\\" type=\\\"text\\\"  \\r\\n    [(ngModel)] = \\\"stuData.campus_loc\\\"  required >\\r\\n      <ion-select-option value=\\\"ARCADIA CAMPUS\\\">ARCADIA CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"ARTS CAMPUS\\\">ARTS CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"EMALAHLENI CAMPUS\\\">EMALAHLENI CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"GA-RANKUWA CAMPUS\\\">GA-RANKUWA CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"MBOMBELA CAMPUS\\\">MBOMBELA CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"PRETORIA MAIN CAMPUS\\\">PRETORIA MAIN CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"POLOKWANE CAMPUS\\\">POLOKWANE CAMPUS</ion-select-option>\\r\\n      <ion-select-option value=\\\"SOSHAGUVE CAMPUS\\\">SOSHAGUVE CAMPUS</ion-select-option>\\r\\n\\r\\n    </ion-select>\\r\\n  </ion-item>\\r\\n\\r\\n  </div>\\r\\n -->\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': password.invalid && (password.dirty || password.touched),\\r\\n        'has-success': password.valid && (password.dirty || password.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n   <ion-label position=\\\"floating\\\"><ion-icon name=\\\"lock-closed\\\"></ion-icon> CREATE PASSWORD</ion-label>\\r\\n   \\r\\n    <ion-input   \\r\\n    required  [(ngModel)] = \\\"stuData.password\\\"\\r\\n    type=\\\"password\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"password\\\"\\r\\n        \\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"password.errors.required\\\">Password is required</p>\\r\\n      <p  style=\\\"color:red\\\" *ngIf=\\\"password.errors.minlength\\\">Password must be 8 characters long, we need another {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}} characters </p>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': password.invalid && (password.dirty || password.touched),\\r\\n        'has-success': password.valid && (password.dirty || password.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n   <ion-label position=\\\"floating\\\"> <ion-icon name=\\\"lock-closed\\\"></ion-icon> CONFIRM PASSWORD</ion-label>\\r\\n   \\r\\n   \\r\\n    <ion-input required  [(ngModel)] = \\\"stuData.confirm\\\"\\r\\n    type=\\\"password\\\"\\r\\n    class=\\\"form-control\\\"\\r\\n           formControlName=\\\"password\\\"\\r\\n        \\r\\n           required>   \\r\\n   \\r\\n           </ion-input>\\r\\n   \\r\\n  </ion-item>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': passwordr.invalid && (passwordr.dirty || passwordr.touched),\\r\\n        'has-success': passwordr.valid && (passwordr.dirty || passwordr.touched)\\r\\n   }\\\">\\r\\n   <ion-item>\\r\\n    <ion-label position=\\\"fixed\\\">Re-type Password: </ion-label><br>\\r\\n    <ion-input type=\\\"passwordr\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"passwordr\\\"\\r\\n           required>\\r\\n           </ion-input>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"passwordr.errors && (passwordr.dirty || passwordr.touched)\\\">\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"passwordr.errors.required\\\">Password is required</p>\\r\\n      <p style=\\\"color:red\\\" *ngIf=\\\"(passwordr.value != Password.value)\\\">Paswords do not macth</p>\\r\\n      <p  style=\\\"color:red\\\" *ngIf=\\\"passwordr.errors.minlength\\\">Password must be 8 characters long, we need another {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}} characters </p>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n  </div>\\r\\n  -->\\r\\n  <!--   *ngIf=\\\"(passwordControl.value != rPasswordControl.value) && !rPasswordControl.errors?.required\\\"          -->\\r\\n  \\r\\n  <!-- <div class=\\\"form-group\\\">\\r\\n    <ion-item>\\r\\n      <ion-label for=\\\"image\\\">Insert Image</ion-label>\\r\\n    </ion-item>\\r\\n    <img width=\\\"100\\\" src=\\\"../../assets/pics/user1.jpg\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n   \\r\\n  <ion-item>\\r\\n    <ion-input type=\\\"file\\\" name=\\\"images\\\" ></ion-input>\\r\\n  </ion-item>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- <ion-button   (click)=\\\" add()\\\" shape=\\\"round\\\" color=\\\"dark\\\" position=\\\"floating\\\">Register </ion-button>\\r\\n  <a routerLink=\\\"/login\\\"> <ion-button  shape=\\\"round\\\" color=\\\"dark\\\"  position=\\\"floating\\\">Sign In</ion-button> </a> -->\\r\\n \\r\\n  <!--\\r\\n    <\\r\\n      pre>{{ password.errors | json }}</pre>\\r\\n  -->\\r\\n<br>\\r\\n<p style=\\\"color: white;\\\">By signing up, you confirm that you've read\\r\\n   and accepted our <a href=\\\"https://tres-images-storage.s3-eu-west-1.amazonaws.com/Privacy+Policy+20200408.pdf\\\" style=\\\"color: rgb(8, 243, 106);;\\\">Terms of Service and Privacy Policy</a></p>\\r\\n<br>\\r\\n\\r\\n  <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\" add()\\\">\\r\\n    \\r\\n    SIGN UP\\r\\n  </ion-button>\\r\\n  <br>\\r\\n  <p style=\\\"color: white; text-align: right;\\\">Have an account? sign in <a routerLink=\\\"/login1\\\" style=\\\"color: rgb(8, 243, 106);;\\\">here</a></p>\\r\\n \\r\\n  </form>\\r\\n</div>\\r\\n</ion-content>\\r\\n\\r\\n \\r\\n\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n    \\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SturegisterPage } from './sturegister.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SturegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SturegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SturegisterPageRoutingModule } from './sturegister-routing.module';\r\n\r\nimport { SturegisterPage } from './sturegister.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    SturegisterPageRoutingModule\r\n  ],\r\n  declarations: [SturegisterPage]\r\n})\r\nexport class SturegisterPageModule {}\r\n","export default \"fieldset {\\n  border: 0;\\n  margin-left: -10px;\\n}\\n\\nion-select-option {\\n  border: solid black 1px;\\n  border-radius: 10px;\\n}\\n\\non-select {\\n  border: solid black 1px;\\n  border-radius: 10px;\\n}\\n\\nion-content {\\n  --ion-background-color:rgb(3, 1, 32);\\n}\\n\\nion-item {\\n  color: white;\\n  text-align: left;\\n  color: #08f36a;\\n  border-bottom: solid 1px;\\n}\\n\\nion-input {\\n  color: white;\\n}\\n\\nion-button {\\n  color: black;\\n}\\n\\nion-icon {\\n  color: white;\\n}\\n\\nh1 {\\n  background-color: #08f36a;\\n  color: #030120;\\n  margin-right: 340px;\\n  margin-left: 340px;\\n}\\n\\nli {\\n  float: right;\\n  list-style: none;\\n  text-align: center;\\n  width: 100px;\\n  height: 15px;\\n  line-height: 10px;\\n  color: aliceblue;\\n}\\n\\na {\\n  display: inline-block;\\n  color: white;\\n  padding: 8px 8px;\\n  text-align: center;\\n  font-style: initial;\\n  -webkit-text-decoration-line: none;\\n          text-decoration-line: none;\\n}\\n\\nimg {\\n  text-align: left;\\n  font-size: small;\\n}\\n\\nul {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1cmVnaXN0ZXIvQzpcXFVzZXJzXFxQZXRyb25lbGxhXFxEZXNrdG9wXFxSTVNVUERBVEUvc3JjXFxhcHBcXHN0dXJlZ2lzdGVyXFxzdHVyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3N0dXJlZ2lzdGVyL3N0dXJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFNBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBRUksdUJBQUE7RUFDQSxtQkFBQTtBQ0FKOztBREdBO0VBRUksdUJBQUE7RUFDQSxtQkFBQTtBQ0RKOztBRElBO0VBRUksb0NBQUE7QUNGSjs7QURNQTtFQUNJLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSx3QkFBQTtBQ0hKOztBREtBO0VBRUksWUFBQTtBQ0hKOztBREtBO0VBRUEsWUFBQTtBQ0hBOztBREtBO0VBQ0ksWUFBQTtBQ0ZKOztBREtBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQ0ZKOztBRElBO0VBQ0csWUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNESDs7QURLRTtFQUVFLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtDQUFBO1VBQUEsMEJBQUE7QUNISjs7QURLRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNGSjs7QURTRTtFQUNFLGtCQUFBO0FDTkoiLCJmaWxlIjoic3JjL2FwcC9zdHVyZWdpc3Rlci9zdHVyZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmaWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogLTEwcHg7ICBcclxufVxyXG5cclxuaW9uLXNlbGVjdC1vcHRpb24gXHJcbntcclxuICAgIGJvcmRlcjogc29saWQgYmxhY2sgMXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgIFxyXG59XHJcblxyXG5vbi1zZWxlY3Rcclxue1xyXG4gICAgYm9yZGVyOiBzb2xpZCBibGFjayAxcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4OyAgIFxyXG59XHJcblxyXG5pb24tY29udGVudHtcclxuXHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOnJnYigzLCAxLCAzMik7XHJcbiAgICBcclxufVxyXG5cclxuaW9uLWl0ZW17XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBjb2xvcjogcmdiKDgsIDI0MywgMTA2KTtcclxuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweDtcclxufVxyXG5pb24taW5wdXRcclxue1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbmlvbi1idXR0b257XHJcblxyXG5jb2xvcjogYmxhY2s7XHJcbn1cclxuaW9uLWljb257XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmgxe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDgsIDI0MywgMTA2KTtcclxuICAgIGNvbG9yOnJnYigzLCAxLCAzMikgO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzNDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzNDBweDtcclxufVxyXG5saXtcclxuICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICBsaXN0LXN0eWxlOm5vbmU7XHJcbiAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgd2lkdGg6IDEwMHB4O1xyXG4gICBoZWlnaHQ6IDE1cHg7XHJcbiAgIGxpbmUtaGVpZ2h0OiAxMHB4O1xyXG4gICBjb2xvcjogYWxpY2VibHVlO1xyXG4gIFxyXG4gIFxyXG4gIH1cclxuICBhIHtcclxuXHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA4cHggOHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zdHlsZTogaW5pdGlhbDtcclxuICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiBub25lO1xyXG4gIH1cclxuICBpbWd7XHJcbiAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgICBmb250LXNpemU6IHNtYWxsOyBcclxuICAgfVxyXG4gIFxyXG4vLyAgIGE6aG92ZXIge1xyXG4gICAgXHJcbi8vICAgICBjb2xvcjogYmxhY2s7XHJcbi8vICAgfVxyXG4gIHVse1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuIiwiZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbn1cblxuaW9uLXNlbGVjdC1vcHRpb24ge1xuICBib3JkZXI6IHNvbGlkIGJsYWNrIDFweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxub24tc2VsZWN0IHtcbiAgYm9yZGVyOiBzb2xpZCBibGFjayAxcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjpyZ2IoMywgMSwgMzIpO1xufVxuXG5pb24taXRlbSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICMwOGYzNmE7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDFweDtcbn1cblxuaW9uLWlucHV0IHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5pb24tYnV0dG9uIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5pb24taWNvbiB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuaDEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDhmMzZhO1xuICBjb2xvcjogIzAzMDEyMDtcbiAgbWFyZ2luLXJpZ2h0OiAzNDBweDtcbiAgbWFyZ2luLWxlZnQ6IDM0MHB4O1xufVxuXG5saSB7XG4gIGZsb2F0OiByaWdodDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gIGNvbG9yOiBhbGljZWJsdWU7XG59XG5cbmEge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogOHB4IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXN0eWxlOiBpbml0aWFsO1xuICB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTtcbn1cblxuaW1nIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiBzbWFsbDtcbn1cblxudWwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {ServiceService} from './../service.service';\r\nimport { AlertController } from '@ionic/angular';  \r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport {\r\n  ReactiveFormsModule,\r\n  FormsModule,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder\r\n}from '@angular/forms'\r\n\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { RouterLink } from '@angular/router';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-sturegister',\r\n  templateUrl: './sturegister.page.html',\r\n  styleUrls: ['./sturegister.page.scss'],\r\n})\r\nexport class SturegisterPage implements OnInit {\r\n  @Input() stuData= {firstName:\" \", lastName:\" \",email:\" \", password:\" \",campus_loc:\" \",studno:\" \" ,id_no:\" \",cell_no:\" \", confirm:\" \"}\r\n // name = new FormControl('');\r\n  constructor(public alertCtrl: AlertController, private _serviceService : ServiceService ) { }\r\n  addstu: any = [];\r\n\r\n  myform: FormGroup;\r\n  firstName: FormControl;\r\n  lastName: FormControl;\r\n  gender: FormControl;\r\n  email: FormControl;\r\n  password: FormControl;\r\n  campus_loc= new FormControl;\r\n  studno= new FormControl;\r\n  id_no=new FormControl;\r\n  cell_no= new FormControl;\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.createFormControls();\r\n    this.createForm();\r\n    this.getstu();\r\n  }\r\n\r\n\r\n  getstu(){\r\n    this._serviceService.postLandlord(this.addstu).subscribe((data: any)=>\r\n    {this.addstu=data;\r\n    console.log(this.addstu);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  async add() {\r\n\r\n     if(this.myform.invalid){\r\n\r\n      const alert = await this.alertCtrl.create({  \r\n        header: 'Registration',  \r\n        message: ' please fill in all the fields ',  \r\n        buttons: ['OK'] \r\n         \r\n      }\r\n     \r\n      \r\n  \r\n  \r\n      \r\n      );  \r\n  \r\n      await alert.present();  \r\n      const result = await alert.onDidDismiss();  \r\n      console.log(result);\r\n  \r\n  \r\n  \r\n     } \r\n       \r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n     \r\n  \r\n \r\n\r\n\r\nelse{\r\n\r\n\r\n    this._serviceService.poststu(this.stuData).subscribe(\r\ndata =>\r\nconsole.log(data));\r\n\r\nconsole.log(this.stuData.firstName);\r\nconsole.log(this.stuData.lastName);\r\nconsole.log(this.stuData.email);\r\nconsole.log(this.stuData.password);\r\nconsole.log(this.stuData.campus_loc);\r\nconsole.log(this.stuData.studno);\r\nconsole.log(this.stuData.id_no);\r\nconsole.log(this.stuData.cell_no);\r\nconsole.log(this.stuData.confirm);\r\n\r\n\r\n  \r\n\r\nconst alert = await this.alertCtrl.create({  \r\n  header: 'Registration',  \r\n  message: ' you have successfully registered ',  \r\n  buttons: ['OK'] \r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n);  \r\n\r\nawait alert.present();  \r\nconst result = await alert.onDidDismiss();  \r\nconsole.log(result);\r\n\r\n\r\n\r\n\r\n\r\nRouterLink['/login'];\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  createFormControls() {\r\n    this.firstName = new FormControl('', Validators.required);\r\n    this.lastName = new FormControl('', Validators.required);\r\n    this.email = new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(\"[^ @]*@[^ @]*\")\r\n    ]);\r\n    this.password = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8)\r\n    ]);\r\n\r\n//validate cell number\r\n  /*  this.cell_no = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(13),\r\n      Validators.pattern(\" \")\r\n    ]);\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n//\"/^\\+27[0-9]{9}$/\"\r\n\r\n\r\n  \r\n\r\n    \r\n  }\r\n\r\n  createForm() {\r\n    this.myform = new FormGroup({\r\n      name: new FormGroup({\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n       \r\n\r\n\r\n    \r\n      }),\r\n    //code was here\r\n    email: this.email,\r\n        password: this.password,\r\n        campus_loc:this.campus_loc,\r\n        studno: this.studno,\r\n        id_no: this.id_no,\r\n        cell_no: this.cell_no\r\n     \r\n   \r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n  async doSomething() {  \r\n    \r\n\r\n    this.stuData= {firstName:\" \", lastName:\" \",email:\" \", password:\" \",campus_loc:\" \",studno:\" \" ,id_no:\" \",cell_no:\" \"}\r\n    \r\n\r\n    const alert = await this.alertCtrl.create({  \r\n      header: 'Registration',  \r\n      message: 'you are successfully registered',  \r\n      buttons: ['OK'] \r\n       \r\n    }\r\n   \r\n    \r\n\r\n\r\n    \r\n    );  \r\n\r\n\r\n\r\n\r\n\r\n    await alert.present();  \r\n    const result = await alert.onDidDismiss();  \r\n    console.log(result);\r\n\r\n\r\n\r\n   \r\n\r\n\r\n}\r\n\r\n\r\n*/\r\n}\r\n"],"sourceRoot":"webpack:///"}