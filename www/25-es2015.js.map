{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;;AAE9B;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAW;AACzC,6BAA6B,2DAAW;AACxC,wBAAwB,2DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,QAAQ,2DAAU,QAAQ,EAAE,2DAAC,SAAS,oGAAoG;AACnK;AACA,cAAc,QAAQ,2DAAU,OAAO;AACvC,2BAA2B;AAC3B;AACA,MAAM;AACN,wBAAwB,eAAe,sBAAsB,mBAAmB,UAAU,cAAc,IAAI,WAAW,YAAY,sBAAsB,mBAAmB,2BAA2B,wBAAwB,EAAE;AACjO;;AAE0B","file":"25-es2015.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, c as getIonMode, H as Host, e as getElement } from './core-80bde1aa.js';\r\nimport './config-3c7f3790.js';\r\n\r\nconst Img = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.onLoad = () => {\r\n            this.ionImgDidLoad.emit();\r\n        };\r\n        this.onError = () => {\r\n            this.ionError.emit();\r\n        };\r\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\r\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\r\n        this.ionError = createEvent(this, \"ionError\", 7);\r\n    }\r\n    srcChanged() {\r\n        this.addIO();\r\n    }\r\n    componentDidLoad() {\r\n        this.addIO();\r\n    }\r\n    addIO() {\r\n        if (this.src === undefined) {\r\n            return;\r\n        }\r\n        if ('IntersectionObserver' in window) {\r\n            this.removeIO();\r\n            this.io = new IntersectionObserver(data => {\r\n                // because there will only ever be one instance\r\n                // of the element we are observing\r\n                // we can just use data[0]\r\n                if (data[0].isIntersecting) {\r\n                    this.load();\r\n                    this.removeIO();\r\n                }\r\n            });\r\n            this.io.observe(this.el);\r\n        }\r\n        else {\r\n            // fall back to setTimeout for Safari and IE\r\n            setTimeout(() => this.load(), 200);\r\n        }\r\n    }\r\n    load() {\r\n        this.loadError = this.onError;\r\n        this.loadSrc = this.src;\r\n        this.ionImgWillLoad.emit();\r\n    }\r\n    removeIO() {\r\n        if (this.io) {\r\n            this.io.disconnect();\r\n            this.io = undefined;\r\n        }\r\n    }\r\n    render() {\r\n        return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"src\": [\"srcChanged\"]\r\n    }; }\r\n    static get style() { return \":host{-o-object-fit:contain;object-fit:contain}:host,img{display:block}img{width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\"; }\r\n};\r\n\r\nexport { Img as ion_img };\r\n"],"sourceRoot":"webpack:///"}