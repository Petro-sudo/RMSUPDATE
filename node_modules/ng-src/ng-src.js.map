{"version":3,"file":"ng-src.js","sources":["ts/ng-src.ts","ts/ng-src.module.ts","ts/ng-src.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgSrcDirective,NgSrcModule} from './public_api';\n","import { NgModule } from '@angular/core';\n\nimport { NgSrcDirective } from './ng-src.directive';\nexport class NgSrcModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ NgSrcDirective ],\n  exports: [ NgSrcDirective ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgSrcModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSrcModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSrcModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  Input,\n  OnChanges,\n  ViewContainerRef,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nexport class NgSrcDirective implements OnChanges {\n   ngSrc: string;\n\n   ngOnLoad = new EventEmitter<XMLHttpRequest>();\n/**\n * @return {?}\n */\nget hostImage(): HTMLImageElement {\n    return this.view.element.nativeElement;\n  }\n/**\n * @param {?} view\n */\nconstructor(private view: ViewContainerRef) { }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n    this.fetchImage(this.ngSrc);\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nprivate fetchImage(url: string) {\n    const /** @type {?} */ httpRequest = new XMLHttpRequest();\n\n    httpRequest.open('GET', url, true);\n    httpRequest.responseType = 'arraybuffer';\n    httpRequest.onload = this.onRequestLoaded.bind(this);\n\n    httpRequest.send();\n  }\n/**\n * @param {?} ev\n * @return {?}\n */\nprivate onRequestLoaded(ev: ProgressEvent): any {\n    const /** @type {?} */ request = /** @type {?} */(( ev.target as XMLHttpRequest));\n\n    const /** @type {?} */ imageUrl = this.createLocalResource(request);\n    this.setImageSource(imageUrl);\n\n    this.ngOnLoad.emit(request);\n  }\n/**\n * @param {?} request\n * @return {?}\n */\nprivate createLocalResource(request: XMLHttpRequest) {\n    const /** @type {?} */ arrayBufferView = new Uint8Array(request.response);\n    const /** @type {?} */ blob = new Blob([ arrayBufferView ], { type: this.getContentType(request) });\n\n    return URL.createObjectURL(blob);\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nprivate setImageSource(url: string) {\n    this.hostImage.src = url;\n  }\n/**\n * @param {?} request\n * @return {?}\n */\nprivate getContentType(request: XMLHttpRequest) {\n    return request.getResponseHeader('content-type');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngSrc]img'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSrc': [{ type: Input },],\n'ngOnLoad': [{ type: Output },],\n};\n}\n\nfunction NgSrcDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSrcDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSrcDirective.ctorParameters;\n/** @type {?} */\nNgSrcDirective.propDecorators;\n/** @type {?} */\nNgSrcDirective.prototype.ngSrc;\n/** @type {?} */\nNgSrcDirective.prototype.ngOnLoad;\n/** @type {?} */\nNgSrcDirective.prototype.view;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";;AEQA,MAAA,cAAA,CAAA;;;;IAaA,WAAA,CAFsB,IAAM,EAE5B;QAFsB,IAAtB,CAAA,IAAsB,GAAA,IAAA,CAAM;QARzB,IAAH,CAAA,QAAW,GAEG,IAAI,YAAA,EAA4B,CAAG;KAMJ;;;;IAJ7C,IAAG,SAAA,GAAH;QACI,OAAO,IAAA,CAAK,IAAC,CAAI,OAAC,CAAO,aAAC,CAAa;KACxC;;;;IAQH,WAJG,GAIH;QACI,IAAI,CAJC,UAAC,CAAU,IAAC,CAAI,KAAC,CAAK,CAAC;KAK7B;;;;;IAFA,UAAA,CAAA,GAAA,EAAH;QAQI,uBAPM,WAAA,GAAc,IAAI,cAAA,EAAe,CAAE;QASzC,WAAW,CAPC,IAAC,CAAI,KAAC,EAAM,GAAA,EAAK,IAAA,CAAK,CAAC;QAQnC,WAAW,CAPC,YAAC,GAAc,aAAA,CAAc;QAQzC,WAAW,CAPC,MAAC,GAAQ,IAAA,CAAK,eAAC,CAAe,IAAC,CAAI,IAAC,CAAI,CAAC;QASrD,WAAW,CAPC,IAAC,EAAI,CAAE;KAQpB;;;;;IALA,eAAA,CAAA,EAAA,EAAH;QAWI,uBAVM,OAAA,IAAU,EAAA,CAAG,MAAU,CAAA,CAAe;QAY5C,uBAVM,QAAA,GAAW,IAAA,CAAK,mBAAC,CAAmB,OAAC,CAAO,CAAC;QAWnD,IAAI,CAVC,cAAC,CAAc,QAAC,CAAQ,CAAC;QAY9B,IAAI,CAVC,QAAC,CAAQ,IAAC,CAAI,OAAC,CAAO,CAAC;KAW7B;;;;;IARA,mBAAA,CAAA,OAAA,EAAH;QAcI,uBAbM,eAAA,GAAkB,IAAI,UAAA,CAAW,OAAC,CAAO,QAAC,CAAQ,CAAC;QAczD,uBAbM,IAAA,GAAO,IAAI,IAAA,CAAK,CAAE,eAAA,CAAgB,EAAG,EAAE,IAAA,EAAM,IAAA,CAAK,cAAC,CAAc,OAAC,CAAO,EAAC,CAAE,CAAC;QAenF,OAbO,GAAA,CAAI,eAAC,CAAe,IAAC,CAAI,CAAC;KAclC;;;;;IAXA,cAAA,CAAA,GAAA,EAAH;QAiBI,IAAI,CAhBC,SAAC,CAAS,GAAC,GAAK,GAAA,CAAI;KAiB1B;;;;;IAdA,cAAA,CAAA,OAAA,EAAH;QAoBI,OAnBO,OAAA,CAAQ,iBAAC,CAAiB,cAAC,CAAc,CAAC;KAoBlD;;AAlBI,cAAP,CAAA,UAAO,GAAoC;IAoB3C,EAnBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAoBvB,QAAQ,EAnBE,YAAA;aAoBX,EAnBC,EAAG;CAoBJ,CAnBC;;;;AAED,cAAD,CAAA,cAAC,GAAA,MAAA;IAsBD,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,CAAC;AApBK,cAAP,CAAA,cAAO,GAAyD;IAsBhE,OAAO,EArBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAsB1B,UAAU,EArBE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAsB7B,CArBC;;ADnEF,MAAA,WAAA,CAAA;;AAEkC,WAAlC,CAAA,UAAkC,GAAoC;IADtE,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,YAAY,EAEE,CAAE,cAAA,CAAe;gBAD/B,OAAO,EAEE,CAAE,cAAA,CAAe;aAD3B,EAEC,EAAG;CADJ,CAEC;;;;AAED,WAAD,CAAA,cAAC,GAAA,MAAA,EACA,CAAC;;ADbF;;GAEG;;;;"}
