import { Directive, EventEmitter, Input, NgModule, Output, ViewContainerRef } from '@angular/core';

class NgSrcDirective {
    /**
     * @param {?} view
     */
    constructor(view) {
        this.view = view;
        this.ngOnLoad = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get hostImage() {
        return this.view.element.nativeElement;
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        this.fetchImage(this.ngSrc);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    fetchImage(url) {
        const /** @type {?} */ httpRequest = new XMLHttpRequest();
        httpRequest.open('GET', url, true);
        httpRequest.responseType = 'arraybuffer';
        httpRequest.onload = this.onRequestLoaded.bind(this);
        httpRequest.send();
    }
    /**
     * @param {?} ev
     * @return {?}
     */
    onRequestLoaded(ev) {
        const /** @type {?} */ request = (ev.target);
        const /** @type {?} */ imageUrl = this.createLocalResource(request);
        this.setImageSource(imageUrl);
        this.ngOnLoad.emit(request);
    }
    /**
     * @param {?} request
     * @return {?}
     */
    createLocalResource(request) {
        const /** @type {?} */ arrayBufferView = new Uint8Array(request.response);
        const /** @type {?} */ blob = new Blob([arrayBufferView], { type: this.getContentType(request) });
        return URL.createObjectURL(blob);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    setImageSource(url) {
        this.hostImage.src = url;
    }
    /**
     * @param {?} request
     * @return {?}
     */
    getContentType(request) {
        return request.getResponseHeader('content-type');
    }
}
NgSrcDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ngSrc]img'
            },] },
];
/**
 * @nocollapse
 */
NgSrcDirective.ctorParameters = () => [
    { type: ViewContainerRef, },
];
NgSrcDirective.propDecorators = {
    'ngSrc': [{ type: Input },],
    'ngOnLoad': [{ type: Output },],
};

class NgSrcModule {
}
NgSrcModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgSrcDirective],
                exports: [NgSrcDirective],
            },] },
];
/**
 * @nocollapse
 */
NgSrcModule.ctorParameters = () => [];

/**
 * Generated bundle index. Do not edit.
 */

export { NgSrcDirective, NgSrcModule };
//# sourceMappingURL=ng-src.js.map
