{"version":3,"file":"ng-src.umd.min.js","sources":["~/ng-src/ng-src.directive.ts","~/ng-src/ng-src.module.ts"],"sourcesContent":["import {\n  Directive,\n  Input,\n  OnChanges,\n  ViewContainerRef,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nexport class NgSrcDirective implements OnChanges {\n   ngSrc: string;\n\n   ngOnLoad = new EventEmitter<XMLHttpRequest>();\n/**\n * @return {?}\n */\nget hostImage(): HTMLImageElement {\n    return this.view.element.nativeElement;\n  }\n/**\n * @param {?} view\n */\nconstructor(private view: ViewContainerRef) { }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n    this.fetchImage(this.ngSrc);\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nprivate fetchImage(url: string) {\n    const /** @type {?} */ httpRequest = new XMLHttpRequest();\n\n    httpRequest.open('GET', url, true);\n    httpRequest.responseType = 'arraybuffer';\n    httpRequest.onload = this.onRequestLoaded.bind(this);\n\n    httpRequest.send();\n  }\n/**\n * @param {?} ev\n * @return {?}\n */\nprivate onRequestLoaded(ev: ProgressEvent): any {\n    const /** @type {?} */ request = /** @type {?} */(( ev.target as XMLHttpRequest));\n\n    const /** @type {?} */ imageUrl = this.createLocalResource(request);\n    this.setImageSource(imageUrl);\n\n    this.ngOnLoad.emit(request);\n  }\n/**\n * @param {?} request\n * @return {?}\n */\nprivate createLocalResource(request: XMLHttpRequest) {\n    const /** @type {?} */ arrayBufferView = new Uint8Array(request.response);\n    const /** @type {?} */ blob = new Blob([ arrayBufferView ], { type: this.getContentType(request) });\n\n    return URL.createObjectURL(blob);\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nprivate setImageSource(url: string) {\n    this.hostImage.src = url;\n  }\n/**\n * @param {?} request\n * @return {?}\n */\nprivate getContentType(request: XMLHttpRequest) {\n    return request.getResponseHeader('content-type');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngSrc]img'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSrc': [{ type: Input },],\n'ngOnLoad': [{ type: Output },],\n};\n}\n\nfunction NgSrcDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSrcDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSrcDirective.ctorParameters;\n/** @type {?} */\nNgSrcDirective.propDecorators;\n/** @type {?} */\nNgSrcDirective.prototype.ngSrc;\n/** @type {?} */\nNgSrcDirective.prototype.ngOnLoad;\n/** @type {?} */\nNgSrcDirective.prototype.view;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgSrcDirective } from './ng-src.directive';\nexport class NgSrcModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ NgSrcDirective ],\n  exports: [ NgSrcDirective ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgSrcModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSrcModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSrcModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgSrcDirective","view","this","ngOnLoad","EventEmitter","Object","defineProperty","prototype","get","element","nativeElement","ngOnChanges","fetchImage","ngSrc","url","httpRequest","XMLHttpRequest","open","responseType","onload","onRequestLoaded","bind","send","ev","request","imageUrl","createLocalResource","setImageSource","emit","arrayBufferView","Uint8Array","response","blob","Blob","type","getContentType","URL","createObjectURL","hostImage","src","getResponseHeader","decorators","Directive","args","selector","ctorParameters","ViewContainerRef","propDecorators","Input","Output","NgSrcModule","NgModule","declarations","exports"],"mappings":"iPAQA,IAAAA,EAAA,WAaA,SAAAA,EAFsBC,GAAAC,KAAtBD,KAAsBA,EARnBC,KAAHC,SAEc,IAAIC,EAAAA,oBAElBC,OAAAC,eAAGN,EAAHO,UAAA,aAAAC,IAAA,WACI,OAAON,KAAKD,KAAKQ,QAAQC,+CAS7BV,EAAAO,UAAAI,YAAA,WACIT,KAJKU,WAAWV,KAAKW,QAGtBb,EAAHO,UAAAK,WAAG,SAAAE,GAQC,IAPMC,EAAc,IAAIC,eASxBD,EAPYE,KAAK,MAAOH,GAAK,GAQ7BC,EAPYG,aAAe,cAQ3BH,EAPYI,OAASjB,KAAKkB,gBAAgBC,KAAKnB,MAS/Ca,EAPYO,QAGbtB,EAAHO,UAAAa,gBAAG,SAAAG,GAWC,IAVMC,EAAUD,EAAa,OAEvBE,EAAWvB,KAAKwB,oBAAoBF,GAW1CtB,KAVKyB,eAAeF,GAYpBvB,KAVKC,SAASyB,KAAKJ,IAGpBxB,EAAHO,UAAAmB,oBAAG,SAAAF,GAcC,IAbMK,EAAkB,IAAIC,WAAWN,EAAQO,UACzCC,EAAO,IAAIC,MAAOJ,IAAqBK,KAAMhC,KAAKiC,eAAeX,KAevE,OAbOY,IAAIC,gBAAgBL,IAG5BhC,EAAHO,UAAAoB,eAAG,SAAAb,GAiBCZ,KAhBKoC,UAAUC,IAAMzB,GAGtBd,EAAHO,UAAA4B,eAAG,SAAAX,GAoBC,OAnBOA,EAAQgB,kBAAkB,mBAhDrC,GAkDOxC,EAAPyC,aACEP,KAAMQ,EAAAA,UAAWC,OAoBjBC,SAnBU,iBAIX5C,EAAD6C,eAAC,WAAA,QAsBAX,KAAMY,EAAAA,oBAnBA9C,EAAP+C,gBAsBAlC,QArBYqB,KAAMc,EAAAA,QAsBlB7C,WArBe+B,KAAMe,EAAAA,UClErB,IAAAC,EAAA,kBAAA,aAAA,GAEkCA,EAAlCT,aACEP,KAAMiB,EAAAA,SAAUR,OADhBS,cAEgBpD,GADhBqD,SAEWrD,OAIZkD,EAADL,eAAC,WAAA"}
