{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/native-page-transitions/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsE7B,yCAAiB;;;;IAC1D;;;;OAIG;;;;;;IAEH,qCAAK;;;;;cAAC,OAAgC,IAAkB,MAAM,CAAC,EAAE;IAEjE;;;;OAIG;;;;;;IAEH,oCAAI;;;;;cAAC,OAAgC,IAAkB,MAAM,CAAC,EAAE;IAEhE;;;;OAIG;;;;;;IAEH,oCAAI;;;;;cAAC,OAAgC,IAAkB,MAAM,CAAC,EAAE;IAGhE;;;;OAIG;;;;;;IAEH,sCAAM;;;;;cAAC,OAAgC,IAAkB,MAAM,CAAC,EAAE;IAIlE;;;;OAIG;;;;;;IAEH,oCAAI;;;;;cAAC,OAAgC,IAAkB,MAAM,CAAC,EAAE;IAEhE;;;OAGG;;;;;IAEH,wDAAwB;;;;kBAAmB,MAAM,CAAC,EAAE;IAEpD;;;OAGG;;;;;IAEH,uDAAuB;;;;kBAAmB,MAAM,CAAC,EAAE;;gBAzDpD,UAAU;;;QAOR,OAAO,EAAE;;;;sDACuD;;QAOhE,OAAO,EAAE;;;;qDACsD;;QAO/D,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;qDACqB;;QAQ/D,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;uDACuB;;QASjE,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;qDACgC;;QAM/D,OAAO,EAAE;;;;yEAC0C;;QAMnD,OAAO,EAAE;;;;wEACyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAxDxC,qBAAqB;QARjC,MAAM,CAAC;YACN,UAAU,EAAE,uBAAuB;YACnC,MAAM,EAAE,2CAA2C;YACnD,SAAS,EAAE,+BAA+B;YAC1C,IAAI,EAAE,mEAAmE;YACzE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SACjD,CAAC;OAEW,qBAAqB,EA0DjC;gCAjID;EAuE2C,iBAAiB;SAA/C,qBAAqB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface NativeTransitionOptions {\n  direction?: string;\n  duration?: number;\n  slowdownfactor?: number;\n  slidePixels?: number;\n  iosdelay?: number;\n  androiddelay?: number;\n  winphonedelay?: number;\n  fixedPixelsTop?: number;\n  fixedPixelsBottom?: number;\n  action?: string;\n  origin?: string;\n  href?: string;\n}\n\n/**\n * @name Native Page Transitions\n * @description\n * The Native Page Transitions plugin uses native hardware acceleration to animate your transitions between views. You have complete control over the type of transition, the duration, and direction.\n *\n * @usage\n * ```typescript\n * import { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions';\n *\n * constructor(private nativePageTransitions: NativePageTransitions) { }\n *\n * ...\n *\n *\n * // example of adding a transition when a page/modal closes\n * ionViewWillLeave() {\n *\n *  let options: NativeTransitionOptions = {\n *     direction: 'up',\n *     duration: 500,\n *     slowdownfactor: 3,\n *     slidePixels: 20,\n *     iosdelay: 100,\n *     androiddelay: 150,\n *     fixedPixelsTop: 0,\n *     fixedPixelsBottom: 60\n *    };\n *\n *  this.nativePageTransitions.slide(options)\n *    .then(onSuccess)\n *    .catch(onError);\n *\n * }\n *\n *\n * // example of adding a transition when pushing a new page\n * openPage(page: any) {\n *\n *   this.nativePageTransitions.slide(options);\n *   this.navCtrl.push(page);\n *\n * }\n *\n * ```\n */\n@Plugin({\n  pluginName: 'NativePageTransitions',\n  plugin: 'com.telerik.plugins.nativepagetransitions',\n  pluginRef: 'plugins.nativepagetransitions',\n  repo: 'https://github.com/Telerik-Verified-Plugins/NativePageTransitions',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n@Injectable()\nexport class NativePageTransitions extends IonicNativePlugin {\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  slide(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Perform a flip animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  flip(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Perform a fade animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS', 'Android'] })\n  fade(options: NativeTransitionOptions): Promise<any> { return; }\n\n\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS', 'Android'] })\n  drawer(options: NativeTransitionOptions): Promise<any> { return; }\n\n\n\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS'] })\n  curl(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Execute pending transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  executePendingTransition(): Promise<any> { return; }\n\n  /**\n   * Cancel pending transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  cancelPendingTransition(): Promise<any> { return; }\n\n}\n"]}