{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-toggle-md.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AACqD;AACH;AACpB;;AAE5D;AACA;AACA,QAAQ,2DAAgB;AACxB,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAW;AACpC,wBAAwB,2DAAW;AACnC,uBAAuB,2DAAW;AAClC,wBAAwB,2DAAW;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yJAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE,qBAAqB,2DAAU;AAC/B;AACA,sBAAsB,8DAAa;AACnC;AACA;AACA;AACA;AACA,QAAQ,8DAAiB;AACzB,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,wGAAwG,QAAQ,oEAAoE,EAAE,4DAAkB,WAAW,0BAA0B,4DAAW,8HAA8H,GAAG,EAAE,2DAAC,SAAS,uBAAuB,EAAE,2DAAC,SAAS,wBAAwB,IAAI,2DAAC,YAAY,sHAAsH;AAChmB;AACA,cAAc,QAAQ,2DAAU,OAAO;AACvC,2BAA2B;AAC3B;AACA;AACA,MAAM;AACN,wBAAwB,eAAe,yCAAyC,iCAAiC,qBAAqB,aAAa,gBAAgB,eAAe,sBAAsB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,UAAU,0BAA0B,yBAAyB,wBAAwB,oBAAoB,OAAO,OAAO,MAAM,cAAc,eAAe,aAAa,gBAAgB,kBAAkB,WAAW,YAAY,SAAS,uBAAuB,eAAe,wBAAwB,qBAAqB,gBAAgB,aAAa,iDAAiD,WAAW,YAAY,QAAQ,yBAAyB,SAAS,MAAM,uDAAuD,uEAAuE,yBAAyB,6DAA6D,qBAAqB,2BAA2B,kBAAkB,mBAAmB,iBAAiB,oBAAoB,+BAA+B,uBAAuB,kBAAkB,WAAW,YAAY,eAAe,6FAA6F,MAAM,mBAAmB,oBAAoB,2BAA2B,0BAA0B,yBAAyB,yBAAyB,8CAA8C,8CAA8C,+CAA+C,iCAAiC,aAAa,mCAAmC,cAAc,kBAAkB,WAAW,YAAY,yCAAyC,iCAAiC,6BAA6B,oBAAoB,cAAc,OAAO,SAAS,0CAA0C,kBAAkB,WAAW,YAAY,iCAAiC,yBAAyB,+DAA+D,uDAAuD,+CAA+C,iEAAiE,2DAA2D,mDAAmD,oCAAoC,yGAAyG,iGAAiG,uCAAuC,eAAe,+DAA+D,WAAW,YAAY,QAAQ,oCAAoC,qCAAqC,qCAAqC,wCAAwC,gCAAgC,4CAA4C,mHAAmH,mDAAmD,2CAA2C,wBAAwB,WAAW,sBAAsB,cAAc,eAAe,aAAa,gBAAgB,kBAAkB,gBAAgB,iBAAiB,oBAAoB,eAAe,6FAA6F,sBAAsB,mBAAmB,oBAAoB,2BAA2B,0BAA0B,sBAAsB,sBAAsB,4BAA4B,iBAAiB,mBAAmB,iBAAiB,oBAAoB,6FAA6F,4BAA4B,mBAAmB,oBAAoB,0BAA0B,yBAAyB,yBAAyB,yBAAyB,EAAE;AAC/5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgC","file":"75-es2015.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\r\nimport './config-3c7f3790.js';\r\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\r\nimport { h as hapticSelection } from './haptic-c8f1473e.js';\r\n\r\nconst Toggle = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputId = `ion-tg-${toggleIds++}`;\r\n        this.lastDrag = 0;\r\n        this.activated = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the toggle is selected.\r\n         */\r\n        this.checked = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the toggle.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\r\n         * property for that.\r\n         *\r\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\r\n         * it's only used when the toggle participates in a native `<form>`.\r\n         */\r\n        this.value = 'on';\r\n        this.onClick = () => {\r\n            if (this.lastDrag + 300 < Date.now()) {\r\n                this.checked = !this.checked;\r\n            }\r\n        };\r\n        this.onFocus = () => {\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onBlur = () => {\r\n            this.ionBlur.emit();\r\n        };\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    }\r\n    checkedChanged(isChecked) {\r\n        this.ionChange.emit({\r\n            checked: isChecked,\r\n            value: this.value\r\n        });\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n        if (this.gesture) {\r\n            this.gesture.enable(!this.disabled);\r\n        }\r\n    }\r\n    async connectedCallback() {\r\n        this.gesture = (await import('./index-c38df685.js')).createGesture({\r\n            el: this.el,\r\n            gestureName: 'toggle',\r\n            gesturePriority: 100,\r\n            threshold: 5,\r\n            passive: false,\r\n            onStart: () => this.onStart(),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: ev => this.onEnd(ev),\r\n        });\r\n        this.disabledChanged();\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.emitStyle();\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive-disabled': this.disabled,\r\n        });\r\n    }\r\n    onStart() {\r\n        this.activated = true;\r\n        // touch-action does not work in iOS\r\n        this.setFocus();\r\n    }\r\n    onMove(detail) {\r\n        if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\r\n            this.checked = !this.checked;\r\n            hapticSelection();\r\n        }\r\n    }\r\n    onEnd(ev) {\r\n        this.activated = false;\r\n        this.lastDrag = Date.now();\r\n        ev.event.preventDefault();\r\n        ev.event.stopImmediatePropagation();\r\n    }\r\n    getValue() {\r\n        return this.value || '';\r\n    }\r\n    setFocus() {\r\n        if (this.buttonEl) {\r\n            this.buttonEl.focus();\r\n        }\r\n    }\r\n    render() {\r\n        const { inputId, disabled, checked, activated, color, el } = this;\r\n        const mode = getIonMode(this);\r\n        const labelId = inputId + '-lbl';\r\n        const label = findItemLabel(el);\r\n        const value = this.getValue();\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\r\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'toggle-activated': activated, 'toggle-checked': checked, 'toggle-disabled': disabled, 'interactive': true }) }, h(\"div\", { class: \"toggle-icon\" }, h(\"div\", { class: \"toggle-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: btnEl => this.buttonEl = btnEl })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"checked\": [\"checkedChanged\"],\r\n        \"disabled\": [\"disabledChanged\"]\r\n    }; }\r\n    static get style() { return \":host{-webkit-box-sizing:content-box!important;box-sizing:content-box!important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:rgba(var(--ion-text-color-rgb,0,0,0),0.3);--background-checked:rgba(var(--ion-color-primary-rgb,56,128,255),0.5);--handle-background:#fff;--handle-background-checked:var(--ion-color-primary,#3880ff);--border-radius:14px;--handle-border-radius:50%;padding-left:12px;padding-right:12px;padding-top:12px;padding-bottom:12px;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:36px;height:14px;contain:strict}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-color.toggle-checked) .toggle-icon{background:rgba(var(--ion-color-base-rgb),.5)}:host(.ion-color.toggle-checked) .toggle-inner{background:var(--ion-color-base)}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:background-color .16s;transition:background-color .16s;background:var(--background);pointer-events:none}.toggle-inner{left:0;top:-3px;border-radius:var(--handle-border-radius);position:absolute;width:20px;height:20px;-webkit-transition-duration:.16s;transition-duration:.16s;-webkit-transition-property:background-color,-webkit-transform;transition-property:background-color,-webkit-transform;transition-property:transform,background-color;transition-property:transform,background-color,-webkit-transform;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);background:var(--handle-background);-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);will-change:transform,background-color;contain:strict}:host-context([dir=rtl]) .toggle-inner,[dir=rtl] .toggle-inner{left:unset;right:unset;right:0}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(16px,0,0);transform:translate3d(16px,0,0);background:var(--handle-background-checked)}:host-context([dir=rtl]).toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(-1 * 16px),0,0);transform:translate3d(calc(-1 * 16px),0,0)}:host(.toggle-disabled){opacity:.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:0;padding-top:12px;padding-bottom:12px;cursor:pointer}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:0;padding-inline-end:0}}:host(.in-item[slot=start]){padding-left:2px;padding-right:18px;padding-top:12px;padding-bottom:12px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:18px;padding-inline-end:18px}}\"; }\r\n};\r\nconst shouldToggle = (doc, checked, deltaX, margin) => {\r\n    const isRTL = doc.dir === 'rtl';\r\n    if (checked) {\r\n        return (!isRTL && (margin > deltaX)) ||\r\n            (isRTL && (-margin < deltaX));\r\n    }\r\n    else {\r\n        return (!isRTL && (-margin < deltaX)) ||\r\n            (isRTL && (margin > deltaX));\r\n    }\r\n};\r\nlet toggleIds = 0;\r\n\r\nexport { Toggle as ion_toggle };\r\n"],"sourceRoot":"webpack:///"}